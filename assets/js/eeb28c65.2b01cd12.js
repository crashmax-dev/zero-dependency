"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[778],{457:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":456,"name":"@zero-dependency/cookie","kind":2,"kindString":"Module","flags":{},"children":[{"id":786,"name":"Cookie","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":13,"character":13}],"target":421,"permalink":"/api/cookie#Cookie"},{"id":784,"name":"CookieAttributes","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/cookie/src/index.ts","line":4,"character":2}],"target":481,"permalink":"/api/cookie#CookieAttributes"},{"id":785,"name":"CookieDomainAttributes","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/cookie/src/index.ts","line":5,"character":2}],"target":478,"permalink":"/api/cookie#CookieDomainAttributes"},{"id":783,"name":"CookieOptions","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/cookie/src/index.ts","line":3,"character":2}],"target":472,"permalink":"/api/cookie#CookieOptions"},{"id":421,"name":"Cookie","kind":128,"kindString":"Class","flags":{},"children":[{"id":422,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":18,"character":2}],"signatures":[{"id":423,"name":"new Cookie","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":424,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":425,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":472,"typeArguments":[{"type":"reference","id":424,"name":"T"}],"name":"CookieOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":421,"typeArguments":[{"type":"reference","id":424,"name":"T"}],"name":"Cookie"}}]},{"id":429,"name":"attributes","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":40,"character":6},{"fileName":"packages/cookie/src/cookie.ts","line":48,"character":6}],"getSignature":{"id":430,"name":"attributes","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get cookie attributes"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"cookie attributes"}]}]},"type":{"type":"reference","id":481,"name":"CookieAttributes"}},"setSignature":{"id":431,"name":"attributes","kind":1048576,"kindString":"Set signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Set cookie attributes"}]},"parameters":[{"id":432,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie attributes"}]},"type":{"type":"reference","id":481,"name":"CookieAttributes"}}],"type":{"type":"intrinsic","name":"void"}}},{"id":433,"name":"get","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":57,"character":2}],"signatures":[{"id":434,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get cookie value"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"cookie value or "},{"kind":"code","text":"`null`"},{"kind":"text","text":" if cookie does not exist"}]}]},"typeParameter":[{"id":435,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":436,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie name"}]},"type":{"type":"reference","id":435,"name":"Name"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"indexedAccess","indexType":{"type":"reference","id":435,"name":"Name"},"objectType":{"type":"reference","id":424,"name":"T"}}]}}]},{"id":451,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":137,"character":2}],"signatures":[{"id":452,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Check if cookie exists"}]},"typeParameter":[{"id":453,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":454,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie name"}]},"type":{"type":"reference","id":453,"name":"Name"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":443,"name":"list","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":107,"character":2}],"signatures":[{"id":444,"name":"list","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get all cookies"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"all document cookies"}]}]},"typeParameter":[{"id":445,"name":"Cookies","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"reference","id":424,"name":"T"}}],"type":{"type":"reference","id":445,"name":"Cookies"}}]},{"id":446,"name":"remove","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":126,"character":2}],"signatures":[{"id":447,"name":"remove","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Remove cookie"}]},"typeParameter":[{"id":448,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":449,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie name"}]},"type":{"type":"reference","id":448,"name":"Name"}},{"id":450,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"cookie domain attributes"}]},"type":{"type":"reference","id":478,"name":"CookieDomainAttributes"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":437,"name":"set","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":68,"character":2}],"signatures":[{"id":438,"name":"set","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Set cookie value"}]},"typeParameter":[{"id":439,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":440,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie name"}]},"type":{"type":"reference","id":439,"name":"Name"}},{"id":441,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie value"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"indexedAccess","indexType":{"type":"reference","id":439,"name":"Name"},"objectType":{"type":"reference","id":424,"name":"T"}}]}},{"id":442,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"cookie attributes"}]},"type":{"type":"reference","id":481,"name":"CookieAttributes"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","children":[422]},{"title":"Accessors","children":[429]},{"title":"Methods","children":[433,451,443,446,437]}],"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":13,"character":13}],"typeParameters":[{"id":455,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"permalink":"/api/cookie/class/Cookie","nextId":481},{"id":481,"name":"CookieAttributes","kind":256,"kindString":"Interface","flags":{},"children":[{"id":487,"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":29,"character":2}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":480,"name":"CookieDomainAttributes.domain"}},{"id":482,"name":"expires","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":33,"character":2}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"reference","name":"Date","qualifiedName":"Date","package":"typescript"}]}},{"id":484,"name":"max-age","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":35,"character":2}],"type":{"type":"intrinsic","name":"number"}},{"id":486,"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":28,"character":2}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":479,"name":"CookieDomainAttributes.path"}},{"id":485,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":36,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}},{"id":483,"name":"secure","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":34,"character":2}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[487,482,484,486,485,483]}],"sources":[{"fileName":"packages/cookie/src/types.ts","line":32,"character":17}],"extendedTypes":[{"type":"reference","id":478,"name":"CookieDomainAttributes"}],"permalink":"/api/cookie/interface/CookieAttributes","previousId":421,"nextId":478},{"id":478,"name":"CookieDomainAttributes","kind":256,"kindString":"Interface","flags":{},"children":[{"id":480,"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":29,"character":2}],"type":{"type":"intrinsic","name":"string"}},{"id":479,"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":28,"character":2}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[480,479]}],"sources":[{"fileName":"packages/cookie/src/types.ts","line":27,"character":17}],"extendedBy":[{"type":"reference","id":481,"name":"CookieAttributes"}],"permalink":"/api/cookie/interface/CookieDomainAttributes","previousId":481,"nextId":472},{"id":472,"name":"CookieOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":475,"name":"attributes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Cookie attribute defaults can be set globally"}]},"sources":[{"fileName":"packages/cookie/src/types.ts","line":19,"character":2}],"type":{"type":"reference","id":481,"name":"CookieAttributes"}},{"id":474,"name":"decode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Decode value after getting cookie"}]},"sources":[{"fileName":"packages/cookie/src/types.ts","line":14,"character":2}],"type":{"type":"reference","id":466,"typeArguments":[{"type":"reference","id":477,"name":"T"}],"name":"Decode"}},{"id":473,"name":"encode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Encode value before setting cookie"}]},"sources":[{"fileName":"packages/cookie/src/types.ts","line":9,"character":2}],"type":{"type":"reference","id":460,"typeArguments":[{"type":"reference","id":477,"name":"T"}],"name":"Encode"}},{"id":476,"name":"initialValue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set initial cookie value"}]},"sources":[{"fileName":"packages/cookie/src/types.ts","line":24,"character":2}],"type":{"type":"reference","id":477,"name":"T"}}],"groups":[{"title":"Properties","children":[475,474,473,476]}],"sources":[{"fileName":"packages/cookie/src/types.ts","line":5,"character":17}],"typeParameters":[{"id":477,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"permalink":"/api/cookie/interface/CookieOptions","previousId":478,"nextId":466},{"id":466,"name":"Decode","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":3,"character":12}],"typeParameters":[{"id":471,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":467,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":3,"character":24}],"signatures":[{"id":468,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":469,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":470,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":458,"typeArguments":[{"type":"reference","id":471,"name":"T"}],"name":"KeyOf"}}],"type":{"type":"intrinsic","name":"any"}}]}},"permalink":"/api/cookie#Decode","previousId":472,"nextId":460},{"id":460,"name":"Encode","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":2,"character":12}],"typeParameters":[{"id":465,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":461,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":2,"character":24}],"signatures":[{"id":462,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":463,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":464,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":458,"typeArguments":[{"type":"reference","id":465,"name":"T"}],"name":"KeyOf"}}],"type":{"type":"intrinsic","name":"any"}}]}},"permalink":"/api/cookie#Encode","previousId":466,"nextId":458},{"id":458,"name":"KeyOf","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":1,"character":12}],"typeParameters":[{"id":459,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","typeArguments":[{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":459,"name":"T"}},{"type":"intrinsic","name":"string"}],"name":"Extract","qualifiedName":"Extract","package":"typescript"},"permalink":"/api/cookie#KeyOf","previousId":460}],"groups":[{"title":"Classes","children":[421]},{"title":"Interfaces","children":[481,478,472]},{"title":"Type Aliases","children":[466,460,458]}],"sources":[{"fileName":"packages/cookie/src/index.ts","line":1,"character":0}],"permalink":"/api/cookie"},"urlSlug":"cookie"}],"packageName":"@zero-dependency/cookie","packageVersion":"1.12.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":699,"name":"@zero-dependency/dom","kind":2,"kindString":"Module","flags":{},"children":[{"id":793,"name":"el","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":33,"character":16}],"target":684,"permalink":"/api/dom#el"},{"id":796,"name":"locationObserver","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/location-observer.ts","line":22,"character":16}],"target":701,"permalink":"/api/dom#locationObserver"},{"id":795,"name":"nbsp","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":75,"character":16}],"target":697,"permalink":"/api/dom#nbsp"},{"id":797,"name":"observeElement","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":23,"character":16}],"target":706,"permalink":"/api/dom#observeElement"},{"id":794,"name":"text","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":65,"character":16}],"target":694,"permalink":"/api/dom#text"},{"id":798,"name":"waitElement","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":59,"character":16}],"target":716,"permalink":"/api/dom#waitElement"},{"id":684,"name":"el","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":33,"character":16}],"signatures":[{"id":685,"name":"el","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new HTML element of the specified type and with the given attributes and children nodes."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The newly created HTML element of the specified type."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nel(\'div\', { id: \'foo\' }, \'Hello world\')\\nel(\'div\', \'Hello world\')\\nel(\'div\', [el(\'span\', \'Hello\'), el(\'span\', \'world\')])\\nel(\'div\', el(\'span\', \'Hello world\'))\\nel(\'div\', el(\'span\', \'Hello\'), el(\'span\', \'world\'))\\nel(\'div\', el(\'span\', \'Hello world\'), \'world\')\\n```"}]}]},"typeParameter":[{"id":686,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"HTMLElementTagNameMap","qualifiedName":"HTMLElementTagNameMap","package":"typescript"}}}],"parameters":[{"id":687,"name":"tag","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The type of HTML element to create."}]},"type":{"type":"reference","id":686,"name":"T"}},{"id":688,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The attributes or children nodes to add to the element."}]},"type":{"type":"union","types":[{"type":"reference","name":"HTMLElement","qualifiedName":"HTMLElement","package":"typescript"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":689,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":690,"name":"style","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":5,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":0},{"type":"intersection","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":691,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]}]},{"type":"intersection","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":692,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]}],"name":"Properties","qualifiedName":"Properties","package":"csstype"}}],"groups":[{"title":"Properties","children":[690]}],"sources":[{"fileName":"packages/dom/src/html.ts","line":4,"character":65}]}},{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":686,"name":"T"},"objectType":{"type":"reference","name":"HTMLElementTagNameMap","qualifiedName":"HTMLElementTagNameMap","package":"typescript"}},{"type":"literal","value":"style"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"}]}],"name":"Partial","qualifiedName":"Partial","package":"typescript"},{"type":"reference","name":"Children"}]}},{"id":693,"name":"children","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The children nodes to add to the element."}]},"type":{"type":"reference","name":"Children"}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","id":686,"name":"T"},"objectType":{"type":"reference","name":"HTMLElementTagNameMap","qualifiedName":"HTMLElementTagNameMap","package":"typescript"}}}],"permalink":"/api/dom/function/el","nextId":701},{"id":697,"name":"nbsp","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":75,"character":16}],"signatures":[{"id":698,"name":"nbsp","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a Text object containing a non-breaking space character."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A Text object containing a non-breaking space character."}]}]},"type":{"type":"reference","name":"Text","qualifiedName":"Text","package":"typescript"}}],"permalink":"/api/dom/function/nbsp","previousId":701,"nextId":706},{"id":694,"name":"text","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":65,"character":16}],"signatures":[{"id":695,"name":"text","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new Text node with the provided text."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new Text node with the provided text."}]}]},"parameters":[{"id":696,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The text to create the Text node with."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Text","qualifiedName":"Text","package":"typescript"}}],"permalink":"/api/dom/function/text","previousId":706,"nextId":716},{"id":701,"name":"locationObserver","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/location-observer.ts","line":22,"character":16}],"signatures":[{"id":702,"name":"locationObserver","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Observes changes to the browser\'s location and history, and invokes\\nthe specified callbacks when the user navigates to a new page or updates the\\ncurrent page\'s state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nlocationObserver<{ id: string }>({\\n  onPush: (location, args) => {},\\n  onReplace: (location, args) => {}\\n})\\n```"}]}]},"typeParameter":[{"id":703,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":704,"name":"events","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An object that contains optional callback functions for push and replace actions."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":703,"name":"T"}],"name":"Events"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/dom/function/locationObserver","previousId":684,"nextId":697},{"id":706,"name":"observeElement","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":23,"character":16}],"signatures":[{"id":707,"name":"observeElement","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Observes changes to an element and invokes a callback function for each mutation."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A function that disconnects the observer."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst disconnect = observeElement(document.body, (mutation, observer) => {\\n  console.log(mutation)\\n})\\n```"}]}]},"typeParameter":[{"id":708,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":708,"name":"T"}],"name":"Element","qualifiedName":"Element","package":"typescript"},"default":{"type":"reference","name":"Element","qualifiedName":"Element","package":"typescript"}}],"parameters":[{"id":709,"name":"el","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The element to observe."}]},"type":{"type":"reference","id":708,"name":"T"}},{"id":710,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The function to call when a mutation occurs."}]},"type":{"type":"reflection","declaration":{"id":711,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":25,"character":12}],"signatures":[{"id":712,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":713,"name":"mutation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"MutationRecord","qualifiedName":"MutationRecord","package":"typescript"}},{"id":714,"name":"observer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"MutationObserver","qualifiedName":"MutationObserver","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":715,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional configuration options for the MutationObserver."}]},"type":{"type":"reference","name":"MutationObserverInit","qualifiedName":"MutationObserverInit","package":"typescript"}}],"type":{"type":"reference","name":"Disconnect"}}],"permalink":"/api/dom/function/observeElement","previousId":697,"nextId":694},{"id":716,"name":"waitElement","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":59,"character":16}],"signatures":[{"id":717,"name":"waitElement","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that resolves with the first element matching the given selector\\nin the specified target, or rejects if no matches are found."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A Promise that resolves with the first matching element."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst el = await waitElement(\'.foo\')\\n```"}]}]},"typeParameter":[{"id":718,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":718,"name":"T"}],"name":"Element","qualifiedName":"Element","package":"typescript"},"default":{"type":"reference","name":"Element","qualifiedName":"Element","package":"typescript"}}],"parameters":[{"id":719,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The CSS selector to match."}]},"type":{"type":"intrinsic","name":"string"}},{"id":720,"name":"target","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The element to search in."}]},"type":{"type":"reference","name":"Element","qualifiedName":"Element","package":"typescript"},"defaultValue":"document.body"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":718,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}],"permalink":"/api/dom/function/waitElement","previousId":694}],"groups":[{"title":"Functions","children":[684,701,697,706,694,716]}],"sources":[{"fileName":"packages/dom/src/index.ts","line":1,"character":0}],"permalink":"/api/dom"},"urlSlug":"dom"}],"packageName":"@zero-dependency/dom","packageVersion":"1.7.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":638,"name":"@zero-dependency/emitter","kind":2,"kindString":"Module","flags":{},"children":[{"id":792,"name":"Emitter","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":15,"character":13}],"target":598,"permalink":"/api/emitter#Emitter"},{"id":791,"name":"EventMap","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/emitter/src/index.ts","line":2,"character":14}],"target":640,"permalink":"/api/emitter#EventMap"},{"id":598,"name":"Emitter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Cross-platform, lightweight type-safe event emitter."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\ntype Events = {\\n  error: (error: Error) => void\\n  message: (from: string, content: string) => void\\n}\\n\\nconst emitter = new Emitter<Events>()\\nemitter.emit(\'error\', \'x\')  // will catch this type error\\n```"}]}]},"children":[{"id":599,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":600,"name":"new Emitter","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":601,"name":"Events","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":640,"name":"EventMap"}}],"type":{"type":"reference","id":598,"typeArguments":[{"type":"reference","id":601,"name":"Events"}],"name":"Emitter"}}]},{"id":613,"name":"emit","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":83,"character":2}],"signatures":[{"id":614,"name":"emit","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Emits an event with a given name and passes any number of arguments to the\\nlisteners. Returns a boolean indicating whether the event had listeners\\nattached."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A boolean indicating whether the event had listeners attached."}]}]},"typeParameter":[{"id":615,"name":"Event","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":616,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the event to be emitted."}]},"type":{"type":"reference","id":615,"name":"Event"}},{"id":617,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Any number of arguments to be passed to the listeners."}]},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":615,"name":"Event"},"objectType":{"type":"reference","id":601,"name":"Events"}}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","id":668,"name":"TypedEventEmitter.emit"}}],"implementationOf":{"type":"reference","id":667,"name":"TypedEventEmitter.emit"}},{"id":627,"name":"eventNames","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":137,"character":2}],"signatures":[{"id":628,"name":"eventNames","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of all the event names that have listeners."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An array of event names."}]}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":601,"name":"Events"}}]}},"implementationOf":{"type":"reference","id":673,"name":"TypedEventEmitter.eventNames"}}],"implementationOf":{"type":"reference","id":672,"name":"TypedEventEmitter.eventNames"}},{"id":633,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":163,"character":2}],"signatures":[{"id":634,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the number of listeners for the given event."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The number of listeners for the given event."}]}]},"typeParameter":[{"id":635,"name":"Event","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":636,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event name."}]},"type":{"type":"reference","id":635,"name":"Event"}}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","id":679,"name":"TypedEventEmitter.listenerCount"}}],"implementationOf":{"type":"reference","id":678,"name":"TypedEventEmitter.listenerCount"}},{"id":629,"name":"listeners","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":150,"character":2}],"signatures":[{"id":630,"name":"listeners","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of listeners for the specified event."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An array of listeners for the specified event."}]}]},"typeParameter":[{"id":631,"name":"Event","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":632,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event name to retrieve listeners for."}]},"type":{"type":"reference","id":631,"name":"Event"}}],"type":{"type":"array","elementType":{"type":"indexedAccess","indexType":{"type":"reference","id":631,"name":"Event"},"objectType":{"type":"reference","id":601,"name":"Events"}}},"implementationOf":{"type":"reference","id":675,"name":"TypedEventEmitter.listeners"}}],"implementationOf":{"type":"reference","id":674,"name":"TypedEventEmitter.listeners"}},{"id":618,"name":"off","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":107,"character":2}],"signatures":[{"id":619,"name":"off","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Removes a listener from the specified event."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The class instance for chaining."}]}]},"typeParameter":[{"id":620,"name":"Event","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":621,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the event to remove the listener from."}]},"type":{"type":"reference","id":620,"name":"Event"}},{"id":622,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the listener to remove from the event."}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":620,"name":"Event"},"objectType":{"type":"reference","id":601,"name":"Events"}}}],"type":{"type":"reference","id":598,"typeArguments":[{"type":"reference","id":601,"name":"Events"}],"name":"Emitter"},"implementationOf":{"type":"reference","id":659,"name":"TypedEventEmitter.off"}}],"implementationOf":{"type":"reference","id":658,"name":"TypedEventEmitter.off"}},{"id":603,"name":"on","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":32,"character":2}],"signatures":[{"id":604,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Adds a listener for the specified event."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns this instance for chaining."}]}]},"typeParameter":[{"id":605,"name":"Event","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":606,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event name."}]},"type":{"type":"reference","id":605,"name":"Event"}},{"id":607,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The listener function."}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":605,"name":"Event"},"objectType":{"type":"reference","id":601,"name":"Events"}}}],"type":{"type":"reference","id":598,"typeArguments":[{"type":"reference","id":601,"name":"Events"}],"name":"Emitter"},"implementationOf":{"type":"reference","id":649,"name":"TypedEventEmitter.on"}}],"implementationOf":{"type":"reference","id":648,"name":"TypedEventEmitter.on"}},{"id":608,"name":"once","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":53,"character":2}],"signatures":[{"id":609,"name":"once","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a proxy function that when called, invokes the original listener function\\nand removes the listener from the event emitter."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The original listener function."}]}]},"typeParameter":[{"id":610,"name":"Event","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":611,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event to listen to."}]},"type":{"type":"reference","id":610,"name":"Event"}},{"id":612,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The listener function to be called once."}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":610,"name":"Event"},"objectType":{"type":"reference","id":601,"name":"Events"}}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","id":610,"name":"Event"},"objectType":{"type":"reference","id":601,"name":"Events"}},"implementationOf":{"type":"reference","id":654,"name":"TypedEventEmitter.once"}}],"implementationOf":{"type":"reference","id":653,"name":"TypedEventEmitter.once"}},{"id":623,"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":121,"character":2}],"signatures":[{"id":624,"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Removes all listeners for the specified event or all events if none specified."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns the instance for chaining."}]}]},"typeParameter":[{"id":625,"name":"Event","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":626,"name":"event","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The event to remove listeners for."}]},"type":{"type":"reference","id":625,"name":"Event"}}],"type":{"type":"reference","id":598,"typeArguments":[{"type":"reference","id":601,"name":"Events"}],"name":"Emitter"},"implementationOf":{"type":"reference","id":664,"name":"TypedEventEmitter.removeAllListeners"}}],"implementationOf":{"type":"reference","id":663,"name":"TypedEventEmitter.removeAllListeners"}}],"groups":[{"title":"Constructors","children":[599]},{"title":"Methods","children":[613,627,633,629,618,603,608,623]}],"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":15,"character":13}],"typeParameters":[{"id":637,"name":"Events","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":640,"name":"EventMap"}}],"implementedTypes":[{"type":"reference","id":647,"typeArguments":[{"type":"reference","id":601,"name":"Events"}],"name":"TypedEventEmitter"}],"permalink":"/api/emitter/class/Emitter","nextId":647},{"id":647,"name":"TypedEventEmitter","kind":256,"kindString":"Interface","flags":{},"children":[{"id":667,"name":"emit","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":12,"character":2}],"signatures":[{"id":668,"name":"emit","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":669,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":670,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":669,"name":"E"}},{"id":671,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":669,"name":"E"},"objectType":{"type":"reference","id":682,"name":"Events"}}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":672,"name":"eventNames","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":16,"character":2}],"signatures":[{"id":673,"name":"eventNames","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":682,"name":"Events"}}]}}}]},{"id":678,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":18,"character":2}],"signatures":[{"id":679,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":680,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":681,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":680,"name":"E"}}],"type":{"type":"intrinsic","name":"number"}}]},{"id":674,"name":"listeners","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":17,"character":2}],"signatures":[{"id":675,"name":"listeners","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":676,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":677,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":676,"name":"E"}}],"type":{"type":"array","elementType":{"type":"indexedAccess","indexType":{"type":"reference","id":676,"name":"E"},"objectType":{"type":"reference","id":682,"name":"Events"}}}}]},{"id":658,"name":"off","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":10,"character":2}],"signatures":[{"id":659,"name":"off","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":660,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":661,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":660,"name":"E"}},{"id":662,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":660,"name":"E"},"objectType":{"type":"reference","id":682,"name":"Events"}}}],"type":{"type":"reference","id":647,"typeArguments":[{"type":"reference","id":682,"name":"Events"}],"name":"TypedEventEmitter"}}]},{"id":648,"name":"on","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":8,"character":2}],"signatures":[{"id":649,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":650,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":651,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":650,"name":"E"}},{"id":652,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":650,"name":"E"},"objectType":{"type":"reference","id":682,"name":"Events"}}}],"type":{"type":"reference","id":647,"typeArguments":[{"type":"reference","id":682,"name":"Events"}],"name":"TypedEventEmitter"}}]},{"id":653,"name":"once","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":9,"character":2}],"signatures":[{"id":654,"name":"once","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":655,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":656,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":655,"name":"E"}},{"id":657,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":655,"name":"E"},"objectType":{"type":"reference","id":682,"name":"Events"}}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","id":655,"name":"E"},"objectType":{"type":"reference","id":682,"name":"Events"}}}]},{"id":663,"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":11,"character":2}],"signatures":[{"id":664,"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":665,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":666,"name":"event","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":665,"name":"E"}}],"type":{"type":"reference","id":647,"typeArguments":[{"type":"reference","id":682,"name":"Events"}],"name":"TypedEventEmitter"}}]}],"groups":[{"title":"Methods","children":[667,672,678,674,658,648,653,663]}],"sources":[{"fileName":"packages/emitter/src/types.ts","line":7,"character":17}],"typeParameters":[{"id":682,"name":"Events","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":640,"name":"EventMap"}}],"implementedBy":[{"type":"reference","id":598,"name":"Emitter"}],"permalink":"/api/emitter/interface/TypedEventEmitter","previousId":598,"nextId":640},{"id":640,"name":"EventMap","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":3,"character":12}],"type":{"type":"reflection","declaration":{"id":641,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":3,"character":23}],"indexSignature":{"id":642,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":643,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":644,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":4,"character":17}],"signatures":[{"id":645,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":646,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}}},"permalink":"/api/emitter#EventMap","previousId":647}],"groups":[{"title":"Classes","children":[598]},{"title":"Interfaces","children":[647]},{"title":"Type Aliases","children":[640]}],"sources":[{"fileName":"packages/emitter/src/index.ts","line":1,"character":0}],"permalink":"/api/emitter"},"urlSlug":"emitter"}],"packageName":"@zero-dependency/emitter","packageVersion":"1.2.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":241,"name":"@zero-dependency/fetcher","kind":2,"kindString":"Module","flags":{},"children":[{"id":740,"name":"Fetcher","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":11,"character":13}],"target":200,"permalink":"/api/fetcher#Fetcher"},{"id":741,"name":"FetcherError","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":1,"character":13}],"target":183,"permalink":"/api/fetcher#FetcherError"},{"id":746,"name":"FetcherMethods","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":18,"character":12}],"target":251,"permalink":"/api/fetcher#FetcherMethods"},{"id":742,"name":"FetcherOptions","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":3,"character":12}],"target":243,"permalink":"/api/fetcher#FetcherOptions"},{"id":743,"name":"FetcherParams","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":8,"character":12}],"target":244,"permalink":"/api/fetcher#FetcherParams"},{"id":747,"name":"FetcherRequest","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":20,"character":12}],"target":252,"permalink":"/api/fetcher#FetcherRequest"},{"id":744,"name":"FetcherRequestInit","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":10,"character":12}],"target":245,"permalink":"/api/fetcher#FetcherRequestInit"},{"id":745,"name":"FetcherRequestOptions","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":14,"character":12}],"target":248,"permalink":"/api/fetcher#FetcherRequestOptions"},{"id":739,"name":"fetcher","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":84,"character":22}],"target":196,"permalink":"/api/fetcher#fetcher"},{"id":181,"name":"METHODS","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"packages/fetcher/src/constants.ts","line":1,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"literal","value":"get"},{"type":"literal","value":"post"},{"type":"literal","value":"put"},{"type":"literal","value":"patch"},{"type":"literal","value":"delete"},{"type":"literal","value":"head"},{"type":"literal","value":"options"}]}},"defaultValue":"...","permalink":"/api/fetcher#METHODS","previousId":248},{"id":200,"name":"Fetcher","kind":128,"kindString":"Class","flags":{},"children":[{"id":201,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":23,"character":2}],"signatures":[{"id":202,"name":"new Fetcher","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":203,"name":"baseURL","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":204,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":243,"name":"FetcherOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":200,"name":"Fetcher"}}]},{"id":211,"name":"delete","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":19,"character":2}],"type":{"type":"reference","id":252,"name":"FetcherRequest"}},{"id":207,"name":"get","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":15,"character":2}],"type":{"type":"reference","id":252,"name":"FetcherRequest"}},{"id":212,"name":"head","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":20,"character":2}],"type":{"type":"reference","id":252,"name":"FetcherRequest"}},{"id":213,"name":"options","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":21,"character":2}],"type":{"type":"reference","id":252,"name":"FetcherRequest"}},{"id":210,"name":"patch","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":18,"character":2}],"type":{"type":"reference","id":252,"name":"FetcherRequest"}},{"id":208,"name":"post","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":16,"character":2}],"type":{"type":"reference","id":252,"name":"FetcherRequest"}},{"id":209,"name":"put","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":17,"character":2}],"type":{"type":"reference","id":252,"name":"FetcherRequest"}},{"id":214,"name":"extends","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":41,"character":2}],"signatures":[{"id":215,"name":"extends","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new Fetcher instance with the same configuration"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The new Fetcher instance"}]}]},"parameters":[{"id":216,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The path to extend the baseURL with"}]},"type":{"type":"intrinsic","name":"string"}},{"id":217,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options to extend the current options with"}]},"type":{"type":"reference","id":243,"name":"FetcherOptions"}}],"type":{"type":"reference","id":200,"name":"Fetcher"}}]},{"id":218,"name":"request","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":53,"character":8}],"signatures":[{"id":219,"name":"request","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Make a request to the API using the Fetcher instance configuration"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The response data"}]}]},"typeParameter":[{"id":220,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":221,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The path to make the request to"}]},"type":{"type":"intrinsic","name":"string"}},{"id":222,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options to use for the request"}]},"type":{"type":"reference","id":248,"name":"FetcherRequestOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":220,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[201]},{"title":"Properties","children":[211,207,212,213,210,208,209]},{"title":"Methods","children":[214,218]}],"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":11,"character":13}],"permalink":"/api/fetcher/class/Fetcher","nextId":183},{"id":196,"name":"fetcher","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":84,"character":22}],"signatures":[{"id":197,"name":"fetcher","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Make a request to the API using the Fetcher instance configuration"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The response data"}]}]},"typeParameter":[{"id":198,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":199,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The arguments to pass to fetch"}]},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"input","isOptional":false,"element":{"type":"union","types":[{"type":"reference","name":"RequestInfo","qualifiedName":"RequestInfo","package":"typescript"},{"type":"reference","name":"URL","qualifiedName":"URL","package":"typescript"}]}},{"type":"named-tuple-member","name":"init","isOptional":true,"element":{"type":"reference","name":"RequestInit","qualifiedName":"RequestInit","package":"typescript"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":198,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}],"permalink":"/api/fetcher/function/fetcher","previousId":234,"nextId":251},{"id":183,"name":"FetcherError","kind":128,"kindString":"Class","flags":{},"children":[{"id":184,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":5,"character":2}],"signatures":[{"id":185,"name":"new FetcherError","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":186,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":187,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":188,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":191,"name":"data","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":12,"character":4}],"type":{"type":"reference","id":186,"name":"T"}},{"id":189,"name":"message","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":190,"name":"response","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":11,"character":4}],"type":{"type":"reference","name":"Response","qualifiedName":"Response","package":"typescript"}}],"groups":[{"title":"Properties","children":[191,189,190]}],"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":9,"character":5}]}}}],"type":{"type":"reference","id":183,"typeArguments":[{"type":"reference","id":186,"name":"T"}],"name":"FetcherError"},"overwrites":{"type":"reference","name":"Error.constructor"}}],"overwrites":{"type":"reference","name":"Error.constructor"}},{"id":193,"name":"data","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":3,"character":2}],"type":{"type":"reference","id":186,"name":"T"}},{"id":192,"name":"response","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":2,"character":2}],"type":{"type":"reference","name":"Response","qualifiedName":"Response","package":"typescript"}}],"groups":[{"title":"Constructors","children":[184]},{"title":"Properties","children":[193,192]}],"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":1,"character":13}],"typeParameters":[{"id":194,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","name":"Error","qualifiedName":"Error","package":"typescript"}],"permalink":"/api/fetcher/class/FetcherError","previousId":200,"nextId":238},{"id":238,"name":"combineHeaders","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/fetcher/src/helpers.ts","line":8,"character":16}],"signatures":[{"id":239,"name":"combineHeaders","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":240,"name":"sources","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"HeadersInit","qualifiedName":"HeadersInit","package":"typescript"}}}],"type":{"type":"reference","name":"Headers","qualifiedName":"Headers","package":"typescript"}}],"permalink":"/api/fetcher/function/combineHeaders","previousId":183,"nextId":234},{"id":234,"name":"combineURLs","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/fetcher/src/helpers.ts","line":2,"character":16}],"signatures":[{"id":235,"name":"combineURLs","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":236,"name":"baseURL","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":237,"name":"path","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/fetcher/function/combineURLs","previousId":238,"nextId":196},{"id":251,"name":"FetcherMethods","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":18,"character":12}],"type":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"query","queryType":{"type":"reference","id":181,"name":"METHODS"}}},"permalink":"/api/fetcher#FetcherMethods","previousId":196,"nextId":243},{"id":243,"name":"FetcherOptions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":3,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"RequestInit","qualifiedName":"RequestInit","package":"typescript"},{"type":"union","types":[{"type":"literal","value":"headers"},{"type":"literal","value":"credentials"},{"type":"literal","value":"mode"},{"type":"literal","value":"cache"},{"type":"literal","value":"redirect"},{"type":"literal","value":"referrerPolicy"}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},"permalink":"/api/fetcher#FetcherOptions","previousId":251,"nextId":244},{"id":244,"name":"FetcherParams","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":8,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Record","qualifiedName":"Record","package":"typescript"},"permalink":"/api/fetcher#FetcherParams","previousId":243,"nextId":252},{"id":252,"name":"FetcherRequest","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":20,"character":12}],"type":{"type":"reflection","declaration":{"id":253,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":20,"character":29}],"signatures":[{"id":254,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":257,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":255,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":256,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":245,"name":"FetcherRequestInit"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":257,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}},"permalink":"/api/fetcher#FetcherRequest","previousId":244,"nextId":245},{"id":245,"name":"FetcherRequestInit","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":10,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"RequestInit","qualifiedName":"RequestInit","package":"typescript"},{"type":"literal","value":"method"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":246,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":247,"name":"params","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":11,"character":2}],"type":{"type":"reference","id":244,"name":"FetcherParams"}}],"groups":[{"title":"Properties","children":[247]}],"sources":[{"fileName":"packages/fetcher/src/types.ts","line":10,"character":63}]}}]},"permalink":"/api/fetcher#FetcherRequestInit","previousId":252,"nextId":248},{"id":248,"name":"FetcherRequestOptions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":14,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","id":245,"name":"FetcherRequestInit"},{"type":"reflection","declaration":{"id":249,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":250,"name":"method","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":15,"character":2}],"type":{"type":"reference","id":251,"name":"FetcherMethods"}}],"groups":[{"title":"Properties","children":[250]}],"sources":[{"fileName":"packages/fetcher/src/types.ts","line":14,"character":57}]}}]},"permalink":"/api/fetcher#FetcherRequestOptions","previousId":245,"nextId":181}],"groups":[{"title":"Classes","children":[200,183]},{"title":"Functions","children":[238,234,196]},{"title":"Type Aliases","children":[251,243,244,252,245,248]},{"title":"Variables","children":[181]}],"sources":[{"fileName":"packages/fetcher/src/index.ts","line":1,"character":0}],"permalink":"/api/fetcher"},"urlSlug":"fetcher"}],"packageName":"@zero-dependency/fetcher","packageVersion":"1.2.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":24,"name":"@zero-dependency/react","kind":2,"kindString":"Module","flags":{},"children":[{"id":725,"name":"ProviderTree","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":35,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/ProviderTree.ts#L35"}],"target":2,"permalink":"/api/react#ProviderTree"},{"id":726,"name":"createProvider","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/createProvider.ts","line":24,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/createProvider.ts#L24"}],"target":17,"permalink":"/api/react#createProvider"},{"id":721,"name":"namedLazy","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/namedLazy.ts","line":18,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/namedLazy.ts#L18"}],"target":26,"permalink":"/api/react#namedLazy"},{"id":727,"name":"useContextProvider","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useContextProvider.ts","line":12,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useContextProvider.ts#L12"}],"target":50,"permalink":"/api/react#useContextProvider"},{"id":724,"name":"useCookie","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":28,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useCookie.ts#L28"}],"target":56,"permalink":"/api/react#useCookie"},{"id":730,"name":"useDidUpdate","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useDidUpdate.ts","line":13,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useDidUpdate.ts#L13"}],"target":79,"permalink":"/api/react#useDidUpdate"},{"id":728,"name":"useEvent","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useEvent.ts","line":20,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useEvent.ts#L20"}],"target":84,"permalink":"/api/react#useEvent"},{"id":729,"name":"useForceUpdate","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useForceUpdate.ts","line":11,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useForceUpdate.ts#L11"}],"target":92,"permalink":"/api/react#useForceUpdate"},{"id":737,"name":"useInterval","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useInterval.ts","line":14,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useInterval.ts#L14"}],"target":95,"permalink":"/api/react#useInterval"},{"id":735,"name":"useIsomorphicEffect","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useIsomorphicEffect.ts","line":7,"character":13,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useIsomorphicEffect.ts#L7"}],"target":102,"permalink":"/api/react#useIsomorphicEffect"},{"id":733,"name":"useLatest","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useLatest.ts","line":11,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useLatest.ts#L11"}],"target":107,"permalink":"/api/react#useLatest"},{"id":722,"name":"useLocalStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useLocalStorage.ts","line":19,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useLocalStorage.ts#L19"}],"target":112,"permalink":"/api/react#useLocalStorage"},{"id":731,"name":"useLogger","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useLogger.ts","line":14,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useLogger.ts#L14"}],"target":124,"permalink":"/api/react#useLogger"},{"id":738,"name":"useMergeRefs","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useMergeRefs.ts","line":21,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useMergeRefs.ts#L21"}],"target":129,"permalink":"/api/react#useMergeRefs"},{"id":734,"name":"usePrevious","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/usePrevious.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/usePrevious.ts#L9"}],"target":137,"permalink":"/api/react#usePrevious"},{"id":723,"name":"useSessionStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useSessionStorage.ts","line":19,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useSessionStorage.ts#L19"}],"target":142,"permalink":"/api/react#useSessionStorage"},{"id":732,"name":"useSetState","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useSetState.ts","line":11,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useSetState.ts#L11"}],"target":154,"permalink":"/api/react#useSetState"},{"id":736,"name":"useToggle","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useToggle.ts","line":13,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useToggle.ts#L13"}],"target":162,"permalink":"/api/react#useToggle"},{"id":2,"name":"ProviderTree","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":35,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/ProviderTree.ts#L35"}],"signatures":[{"id":3,"name":"ProviderTree","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a provider tree with the given providers and children."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"When there are no providers provided."}]},{"tag":"@returns","content":[{"kind":"text","text":"The provider tree with the given providers and children."}]},{"tag":"@example","content":[{"kind":"code","text":"```jsx\\n<ProviderTree\\n  providers={(wrapper) => [\\n    wrapper(StrictMode),\\n    wrapper(MyProvider, { value: \'hello\' }),\\n    wrapper(MyOtherProvider, { value: \'world\' })\\n  ]}\\n>\\n  <App />\\n</ProviderTree>\\n```"}]}]},"parameters":[{"id":4,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":15,"name":"children","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The children to render inside the provider tree."}]},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":42,"character":2,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/ProviderTree.ts#L42"}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":6,"name":"providers","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":36,"character":2,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/ProviderTree.ts#L36"}],"type":{"type":"reflection","declaration":{"id":7,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":36,"character":13,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/ProviderTree.ts#L36"}],"signatures":[{"id":8,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A function that returns an array of component providers."}]},"parameters":[{"id":9,"name":"wrapper","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":10,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":37,"character":13,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/ProviderTree.ts#L37"}],"signatures":[{"id":11,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":12,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","id":12,"name":"T"}],"name":"FunctionComponent","qualifiedName":"React.FunctionComponent","package":"@types/react"}}],"parameters":[{"id":13,"name":"component","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":12,"name":"T"}},{"id":14,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":12,"name":"T"}],"name":"Props"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":12,"name":"T"}],"name":"Provider"}}]}}}],"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","name":"Component"}],"name":"Provider"}}}]}}}],"groups":[{"title":"Properties","children":[15,6]}],"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":35,"character":36,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/ProviderTree.ts#L35"}]}}}],"type":{"type":"reference","name":"JSX.Element","qualifiedName":"global.JSX.Element","package":"@types/react"}}],"permalink":"/api/react/function/ProviderTree","nextId":17},{"id":17,"name":"createProvider","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/createProvider.ts","line":24,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/createProvider.ts#L24"}],"signatures":[{"id":18,"name":"createProvider","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a context provider, hook, and consumer."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A tuple of the hook, provider, and consumer."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\ninterface FormContext {\\n  values: Record<string, string>\\n  onSubmit: (values: Record<string, string>) => void\\n}\\n\\nconst [useForm, FormProvider] = createProvider<FormContext>(\'Form\')\\n```"}]}]},"typeParameter":[{"id":19,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":20,"name":"displayName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the context. Used for error messages."}]},"type":{"type":"intrinsic","name":"string"}},{"id":21,"name":"defaultValue","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The default value of the context."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":19,"name":"T"}]},"defaultValue":"null"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"hook","isOptional":false,"element":{"type":"reflection","declaration":{"id":22,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/createProvider.ts","line":28,"character":8,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/createProvider.ts#L28"}],"signatures":[{"id":23,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":19,"name":"T"}}]}}},{"type":"named-tuple-member","name":"provider","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":19,"name":"T"},{"type":"literal","value":null}]}],"name":"React.Provider","qualifiedName":"React.Provider","package":"@types/react"}},{"type":"named-tuple-member","name":"consumer","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":19,"name":"T"},{"type":"literal","value":null}]}],"name":"React.Consumer","qualifiedName":"React.Consumer","package":"@types/react"}}]}}}],"permalink":"/api/react/function/createProvider","previousId":2,"nextId":26},{"id":26,"name":"namedLazy","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/namedLazy.ts","line":18,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/namedLazy.ts#L18"}],"signatures":[{"id":27,"name":"namedLazy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A wrapper around React.lazy that allows you to specify a named export to resolve to."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`React.LazyExoticComponent`"},{"kind":"text","text":" that will resolve to the named export."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst LazyComponent = namedLazy(() => import(\'./Component\'), \'Component\')\\n```"}]}]},"typeParameter":[{"id":28,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":29,"name":"loader","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A function that returns a promise that resolves to an object."}]},"type":{"type":"reflection","declaration":{"id":30,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/namedLazy.ts","line":19,"character":10,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/namedLazy.ts#L19"}],"signatures":[{"id":31,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":28,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}},{"id":32,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the named export to resolve to."}]},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":28,"name":"T"}}}],"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":28,"name":"T"}},"objectType":{"type":"reference","id":28,"name":"T"}}],"name":"React.LazyExoticComponent","qualifiedName":"React.LazyExoticComponent","package":"@types/react"}}],"permalink":"/api/react/function/namedLazy","previousId":17,"nextId":50},{"id":36,"name":"CallbackFn","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":2,"character":12,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/types.ts#L2"}],"typeParameters":[{"id":43,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reflection","declaration":{"id":40,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":2,"character":33,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/types.ts#L2"}],"signatures":[{"id":41,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":42,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reflection","declaration":{"id":37,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":2,"character":61,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/types.ts#L2"}],"signatures":[{"id":38,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":39,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":43,"name":"T"}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":43,"name":"T"}],"name":"ReturnType","qualifiedName":"ReturnType","package":"typescript"}}]}},"permalink":"/api/react#CallbackFn","previousId":168,"nextId":34},{"id":34,"name":"KeyOf","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":1,"character":12,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/types.ts#L1"}],"typeParameters":[{"id":35,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","typeArguments":[{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":35,"name":"T"}},{"type":"intrinsic","name":"string"}],"name":"Extract","qualifiedName":"Extract","package":"typescript"},"permalink":"/api/react#KeyOf","previousId":36,"nextId":44},{"id":44,"name":"SetStateActionPartial","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":5,"character":12,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/types.ts#L5"}],"typeParameters":[{"id":48,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","id":48,"name":"T"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"},{"type":"reflection","declaration":{"id":45,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":5,"character":53,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/types.ts#L5"}],"signatures":[{"id":46,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":47,"name":"state","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":48,"name":"T"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":48,"name":"T"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}}]}}]},"permalink":"/api/react#SetStateActionPartial","previousId":34},{"id":50,"name":"useContextProvider","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useContextProvider.ts","line":12,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useContextProvider.ts#L12"}],"signatures":[{"id":51,"name":"useContextProvider","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A hook that throws an error if it is used outside of a context provider."}]},"typeParameter":[{"id":52,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":53,"name":"displayName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the context provider. Used for error messages."}]},"type":{"type":"intrinsic","name":"string"}},{"id":54,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The context to use."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":52,"name":"T"}],"name":"Context","qualifiedName":"React.Context","package":"@types/react"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":52,"name":"T"}],"name":"NonNullable","qualifiedName":"NonNullable","package":"typescript"}}],"permalink":"/api/react/function/useContextProvider","previousId":26,"nextId":56},{"id":56,"name":"useCookie","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":28,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useCookie.ts#L28"}],"signatures":[{"id":57,"name":"useCookie","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"React hook for managing cookies."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```jsx\\nfunction App() {\\n  const [cookies, setCookie, removeCookie] = useCookie({\\n    initialValue: {\\n      theme: \'dark\'\\n    }\\n  })\\n\\n  return <h1>Theme: {cookies.theme}</h1>\\n}\\n```"}]}]},"typeParameter":[{"id":58,"name":"CookieValues","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":59,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Cookie options."}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"reference","id":58,"name":"CookieValues"},{"type":"reflection","declaration":{"id":60,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":73,"name":"getCookie","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":41,"character":13,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useCookie.ts#L41"}],"type":{"type":"reflection","declaration":{"id":74,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":41,"character":24,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useCookie.ts#L41"}],"signatures":[{"id":75,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":77,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":34,"typeArguments":[{"type":"reference","id":58,"name":"CookieValues"}],"name":"KeyOf"}}],"parameters":[{"id":76,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":77,"name":"Name"}}],"type":{"type":"union","types":[{"type":"indexedAccess","indexType":{"type":"reference","id":77,"name":"Name"},"objectType":{"type":"reference","id":58,"name":"CookieValues"}},{"type":"literal","value":null}]}}]}}},{"id":67,"name":"removeCookie","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":37,"character":13,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useCookie.ts#L37"}],"type":{"type":"reflection","declaration":{"id":68,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":37,"character":27,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useCookie.ts#L37"}],"signatures":[{"id":69,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":72,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":34,"typeArguments":[{"type":"reference","id":58,"name":"CookieValues"}],"name":"KeyOf"}}],"parameters":[{"id":70,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":72,"name":"Name"}},{"id":71,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"CookieDomainAttributes"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":61,"name":"setCookie","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":33,"character":13,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useCookie.ts#L33"}],"type":{"type":"reflection","declaration":{"id":62,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":33,"character":24,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useCookie.ts#L33"}],"signatures":[{"id":63,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":66,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":34,"typeArguments":[{"type":"reference","id":58,"name":"CookieValues"}],"name":"KeyOf"}}],"parameters":[{"id":64,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":66,"name":"Name"}},{"id":65,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":66,"name":"Name"},"objectType":{"type":"reference","id":58,"name":"CookieValues"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[73,67,61]}],"sources":[{"fileName":"packages/react/src/useCookie.ts","line":32,"character":2,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useCookie.ts#L32"}]}}]}}}],"permalink":"/api/react/function/useCookie","previousId":50,"nextId":79},{"id":79,"name":"useDidUpdate","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useDidUpdate.ts","line":13,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useDidUpdate.ts#L13"}],"signatures":[{"id":80,"name":"useDidUpdate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A hook that runs a callback after the first render."}]},"parameters":[{"id":81,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The callback to run after the first render."}]},"type":{"type":"reference","name":"EffectCallback","qualifiedName":"React.EffectCallback","package":"@types/react"}},{"id":82,"name":"deps","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The dependencies to watch for changes."}]},"type":{"type":"reference","name":"DependencyList","qualifiedName":"React.DependencyList","package":"@types/react"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/react/function/useDidUpdate","previousId":56,"nextId":84},{"id":84,"name":"useEvent","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useEvent.ts","line":20,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useEvent.ts#L20"}],"signatures":[{"id":85,"name":"useEvent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a stable version of the provided callback function that can be safely passed to other hooks\\nthat depend on it. This is achieved by creating a mutable ref object that contains both the original\\ncallback function and the stable version. The stable version is created by calling the original callback\\nfunction with the current arguments. When the provided callback function changes, the ref object is\\nupdated to contain the new callback function, effectively creating a new stable version."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A stable version of the provided callback function"}]},{"tag":"@see","content":[{"kind":"text","text":"https://github.com/reactjs/rfcs/pull/220"}]}]},"typeParameter":[{"id":89,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reflection","declaration":{"id":86,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useEvent.ts","line":20,"character":35,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useEvent.ts#L20"}],"signatures":[{"id":87,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":88,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":90,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the original callback function to create a stable version of"}]},"type":{"type":"reference","id":89,"name":"T"}}],"type":{"type":"reference","id":36,"typeArguments":[{"type":"reference","id":89,"name":"T"}],"name":"CallbackFn"}}],"permalink":"/api/react/function/useEvent","previousId":79,"nextId":92},{"id":92,"name":"useForceUpdate","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useForceUpdate.ts","line":11,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useForceUpdate.ts#L11"}],"signatures":[{"id":93,"name":"useForceUpdate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a React dispatch function that can be called to force a component re-render."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The dispatch function."}]}]},"type":{"type":"reference","name":"React.DispatchWithoutAction","qualifiedName":"React.DispatchWithoutAction","package":"@types/react"}}],"permalink":"/api/react/function/useForceUpdate","previousId":84,"nextId":95},{"id":95,"name":"useInterval","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useInterval.ts","line":14,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useInterval.ts#L14"}],"signatures":[{"id":96,"name":"useInterval","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A custom hook that invokes a callback function at a specified interval."}],"blockTags":[{"tag":"@returns","content":[]}]},"parameters":[{"id":97,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The function to be invoked at the specified interval."}]},"type":{"type":"reflection","declaration":{"id":98,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useInterval.ts","line":14,"character":38,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useInterval.ts#L14"}],"signatures":[{"id":99,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":100,"name":"ms","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The time (in milliseconds) between each invocation of the callback function."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/react/function/useInterval","previousId":92,"nextId":102},{"id":102,"name":"useIsomorphicEffect","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useIsomorphicEffect.ts","line":7,"character":13,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useIsomorphicEffect.ts#L7"}],"signatures":[{"id":103,"name":"useIsomorphicEffect","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"code","text":"`useLayoutEffect`"},{"kind":"text","text":" will show warning if used during ssr, e.g. with Next.js\\n"},{"kind":"code","text":"`useIsomorphicEffect`"},{"kind":"text","text":" removes it by replacing "},{"kind":"code","text":"`useLayoutEffect`"},{"kind":"text","text":" with "},{"kind":"code","text":"`useEffect`"},{"kind":"text","text":" during ssr"}]},"parameters":[{"id":104,"name":"effect","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EffectCallback","qualifiedName":"React.EffectCallback","package":"@types/react"}},{"id":105,"name":"deps","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"DependencyList","qualifiedName":"React.DependencyList","package":"@types/react"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/react/function/useIsomorphicEffect","previousId":95,"nextId":107},{"id":107,"name":"useLatest","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useLatest.ts","line":11,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useLatest.ts#L11"}],"signatures":[{"id":108,"name":"useLatest","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"This is mostly useful to get access to the latest value of some props or\\nstate inside an asynchronous callback, instead of that value at the time\\nthe callback was created from."}]},"typeParameter":[{"id":109,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":110,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to store in a ref."}]},"type":{"type":"reference","id":109,"name":"T"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":109,"name":"T"}],"name":"React.MutableRefObject","qualifiedName":"React.MutableRefObject","package":"@types/react"}}],"permalink":"/api/react/function/useLatest","previousId":102,"nextId":112},{"id":112,"name":"useLocalStorage","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useLocalStorage.ts","line":19,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useLocalStorage.ts#L19"}],"signatures":[{"id":113,"name":"useLocalStorage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a hook that provides a way to read from and write to the "},{"kind":"code","text":"`localStorage`"},{"kind":"text","text":" of the browser."}]},"typeParameter":[{"id":114,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":115,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The key to use when reading/writing from/to "},{"kind":"code","text":"`localStorage`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":116,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The initial value to use when the key is not found in "},{"kind":"code","text":"`localStorage`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":114,"name":"T"}],"name":"ExcludeFunction"}},{"id":117,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional configuration options for the hook."}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"unknown"},{"type":"reflection","declaration":{"id":118,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":15,"character":12,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useWebStorage.ts#L15"}],"signatures":[{"id":119,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":120,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reflection","declaration":{"id":121,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":16,"character":14,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useWebStorage.ts#L16"}],"signatures":[{"id":122,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}]}}}],"permalink":"/api/react/function/useLocalStorage","previousId":107,"nextId":124},{"id":124,"name":"useLogger","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useLogger.ts","line":14,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useLogger.ts#L14"}],"signatures":[{"id":125,"name":"useLogger","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A hook that logs when a component mounts and updates."}]},"parameters":[{"id":126,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the component."}]},"type":{"type":"intrinsic","name":"string"}},{"id":127,"name":"deps","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The dependencies to watch for changes."}]},"type":{"type":"reference","name":"DependencyList","qualifiedName":"React.DependencyList","package":"@types/react"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/react/function/useLogger","previousId":112,"nextId":129},{"id":129,"name":"useMergeRefs","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useMergeRefs.ts","line":21,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useMergeRefs.ts#L21"}],"signatures":[{"id":130,"name":"useMergeRefs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a function that merges multiple React refs into one."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A function that sets the value of all merged refs"}]}]},"typeParameter":[{"id":131,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the ref value"}]}}],"parameters":[{"id":132,"name":"refs","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The refs to be merged"}]},"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","id":131,"name":"T"}],"name":"Refs"}}}],"type":{"type":"reflection","declaration":{"id":133,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useMergeRefs.ts","line":21,"character":53,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useMergeRefs.ts#L21"}],"signatures":[{"id":134,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":135,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":131,"name":"T"},{"type":"literal","value":null}]}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"permalink":"/api/react/function/useMergeRefs","previousId":124,"nextId":137},{"id":137,"name":"usePrevious","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/usePrevious.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/usePrevious.ts#L9"}],"signatures":[{"id":138,"name":"usePrevious","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A hook that returns a ref that always contains the previous value."}]},"typeParameter":[{"id":139,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":140,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to store in a ref."}]},"type":{"type":"reference","id":139,"name":"T"}}],"type":{"type":"union","types":[{"type":"reference","id":139,"name":"T"},{"type":"intrinsic","name":"undefined"}]}}],"permalink":"/api/react/function/usePrevious","previousId":129,"nextId":142},{"id":142,"name":"useSessionStorage","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useSessionStorage.ts","line":19,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useSessionStorage.ts#L19"}],"signatures":[{"id":143,"name":"useSessionStorage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a hook that provides a "},{"kind":"code","text":"`sessionStorage`"},{"kind":"text","text":" value for a given key."}]},"typeParameter":[{"id":144,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":145,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The key to use for the "},{"kind":"code","text":"`sessionStorage`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":146,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The initial value to use for the "},{"kind":"code","text":"`sessionStorage`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":144,"name":"T"}],"name":"ExcludeFunction"}},{"id":147,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional options to configure the behavior of the hook."}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"unknown"},{"type":"reflection","declaration":{"id":148,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":15,"character":12,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useWebStorage.ts#L15"}],"signatures":[{"id":149,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":150,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reflection","declaration":{"id":151,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":16,"character":14,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useWebStorage.ts#L16"}],"signatures":[{"id":152,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}]}}}],"permalink":"/api/react/function/useSessionStorage","previousId":137,"nextId":154},{"id":154,"name":"useSetState","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useSetState.ts","line":11,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useSetState.ts#L11"}],"signatures":[{"id":155,"name":"useSetState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst [state, setState] = useSetState({ count: 1, name: \'John\' })\\n```"}]}]},"typeParameter":[{"id":156,"name":"State","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":157,"name":"initialState","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Initial state."}]},"type":{"type":"reference","id":156,"name":"State"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"state","isOptional":false,"element":{"type":"reference","id":156,"name":"State"}},{"type":"named-tuple-member","name":"setState","isOptional":false,"element":{"type":"reflection","declaration":{"id":158,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useSetState.ts","line":15,"character":12,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useSetState.ts#L15"}],"signatures":[{"id":159,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":160,"name":"setStateAction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":44,"typeArguments":[{"type":"reference","id":156,"name":"State"}],"name":"SetStateActionPartial"}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}}],"permalink":"/api/react/function/useSetState","previousId":142,"nextId":162},{"id":162,"name":"useToggle","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useToggle.ts","line":13,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useToggle.ts#L13"}],"signatures":[{"id":163,"name":"useToggle","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a tuple containing a boolean value and a function that toggles\\nits value. The initial boolean value defaults to false if not provided."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A tuple containing the boolean value and a function that toggles its value."}]}]},"parameters":[{"id":164,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The initial value of the boolean."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"value","isOptional":false,"element":{"type":"intrinsic","name":"boolean"}},{"type":"named-tuple-member","name":"toggle","isOptional":false,"element":{"type":"reflection","declaration":{"id":165,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useToggle.ts","line":15,"character":37,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useToggle.ts#L15"}],"signatures":[{"id":166,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}}}],"permalink":"/api/react/function/useToggle","previousId":154,"nextId":168},{"id":168,"name":"useWebStorage","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":8,"character":16,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useWebStorage.ts#L8"}],"signatures":[{"id":169,"name":"useWebStorage","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":170,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":171,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":172,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":170,"name":"T"}],"name":"ExcludeFunction"}},{"id":173,"name":"storage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Storage","qualifiedName":"Storage","package":"typescript"}},{"id":174,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"value","isOptional":false,"element":{"type":"reference","id":170,"name":"T"}},{"type":"named-tuple-member","name":"setValue","isOptional":false,"element":{"type":"reflection","declaration":{"id":175,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":15,"character":12,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useWebStorage.ts#L15"}],"signatures":[{"id":176,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":177,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":170,"name":"T"}],"name":"React.SetStateAction","qualifiedName":"React.SetStateAction","package":"@types/react"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"type":"named-tuple-member","name":"resetValue","isOptional":false,"element":{"type":"reflection","declaration":{"id":178,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":16,"character":14,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/useWebStorage.ts#L16"}],"signatures":[{"id":179,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}}}],"permalink":"/api/react/function/useWebStorage","previousId":162,"nextId":36}],"groups":[{"title":"Functions","children":[2,17,26,50,56,79,84,92,95,102,107,112,124,129,137,142,154,162,168]},{"title":"Type Aliases","children":[36,34,44]}],"sources":[{"fileName":"packages/react/src/index.ts","line":1,"character":0,"url":"https://github.com/zero-dependency/react/blob/efe55c3/src/index.ts#L1"}],"permalink":"/api/react"},"urlSlug":"react"}],"packageName":"@zero-dependency/react","packageVersion":"0.18.0"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":488,"name":"@zero-dependency/storage","kind":2,"kindString":"Module","flags":{},"children":[{"id":788,"name":"LocalStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/storage/src/local-storage.ts","line":4,"character":13}],"target":490,"permalink":"/api/storage#LocalStorage"},{"id":789,"name":"SessionStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/storage/src/session-storage.ts","line":4,"character":13}],"target":520,"permalink":"/api/storage#SessionStorage"},{"id":787,"name":"StorageOptions","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/storage/src/index.ts","line":4,"character":14}],"target":552,"permalink":"/api/storage#StorageOptions"},{"id":790,"name":"WebStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":3,"character":13}],"target":567,"permalink":"/api/storage#WebStorage"},{"id":490,"name":"LocalStorage","kind":128,"kindString":"Class","flags":{},"children":[{"id":491,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/storage/src/local-storage.ts","line":5,"character":2}],"signatures":[{"id":492,"name":"new LocalStorage","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":493,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":494,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":495,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":550,"typeArguments":[{"type":"reference","id":493,"name":"T"}],"name":"ExcludeFunction"}},{"id":496,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":552,"typeArguments":[{"type":"reference","id":493,"name":"T"}],"name":"StorageOptions"}}],"type":{"type":"reference","id":490,"typeArguments":[{"type":"reference","id":493,"name":"T"}],"name":"LocalStorage"},"overwrites":{"type":"reference","id":569,"name":"WebStorage.constructor"}}],"overwrites":{"type":"reference","id":568,"name":"WebStorage.constructor"}},{"id":502,"name":"initialValue","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":36,"character":6}],"getSignature":{"id":503,"name":"initialValue","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get initial value of storage"}]},"type":{"type":"reference","id":570,"name":"T"},"inheritedFrom":{"type":"reference","name":"WebStorage.initialValue"}},"inheritedFrom":{"type":"reference","id":580,"name":"WebStorage.initialValue"}},{"id":504,"name":"value","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":43,"character":6}],"getSignature":{"id":505,"name":"value","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Read value from storage or return initial value if value does not exist in storage"}]},"type":{"type":"reference","id":570,"name":"T"},"inheritedFrom":{"type":"reference","name":"WebStorage.value"}},"inheritedFrom":{"type":"reference","id":582,"name":"WebStorage.value"}},{"id":514,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":78,"character":2}],"signatures":[{"id":515,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the value exists in storage"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"true if the value exists in storage"}]}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":593,"name":"WebStorage.has"}}],"inheritedFrom":{"type":"reference","id":592,"name":"WebStorage.has"}},{"id":516,"name":"reset","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":85,"character":2}],"signatures":[{"id":517,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Reset storage to initial value"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":595,"name":"WebStorage.reset"}}],"inheritedFrom":{"type":"reference","id":594,"name":"WebStorage.reset"}},{"id":506,"name":"write","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":57,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":59,"character":2}],"signatures":[{"id":507,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Write value to storage and return the value written"}]},"parameters":[{"id":508,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Value to write to storage"}]},"type":{"type":"reference","id":493,"name":"T"}}],"type":{"type":"reference","id":493,"name":"T"},"inheritedFrom":{"type":"reference","id":585,"name":"WebStorage.write"}},{"id":509,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":510,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":511,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":15}],"signatures":[{"id":512,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":513,"name":"prevValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":493,"name":"T"}}],"type":{"type":"reference","id":493,"name":"T"}}]}}}],"type":{"type":"reference","id":493,"name":"T"},"inheritedFrom":{"type":"reference","id":587,"name":"WebStorage.write"}}],"inheritedFrom":{"type":"reference","id":584,"name":"WebStorage.write"}}],"groups":[{"title":"Constructors","children":[491]},{"title":"Accessors","children":[502,504]},{"title":"Methods","children":[514,516,506]}],"sources":[{"fileName":"packages/storage/src/local-storage.ts","line":4,"character":13}],"typeParameters":[{"id":518,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","id":567,"typeArguments":[{"type":"reference","id":493,"name":"T"}],"name":"WebStorage"}],"permalink":"/api/storage/class/LocalStorage","nextId":520},{"id":520,"name":"SessionStorage","kind":128,"kindString":"Class","flags":{},"children":[{"id":521,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/storage/src/session-storage.ts","line":5,"character":2}],"signatures":[{"id":522,"name":"new SessionStorage","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":523,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":524,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":525,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":550,"typeArguments":[{"type":"reference","id":523,"name":"T"}],"name":"ExcludeFunction"}},{"id":526,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":552,"typeArguments":[{"type":"reference","id":523,"name":"T"}],"name":"StorageOptions"}}],"type":{"type":"reference","id":520,"typeArguments":[{"type":"reference","id":523,"name":"T"}],"name":"SessionStorage"},"overwrites":{"type":"reference","id":569,"name":"WebStorage.constructor"}}],"overwrites":{"type":"reference","id":568,"name":"WebStorage.constructor"}},{"id":532,"name":"initialValue","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":36,"character":6}],"getSignature":{"id":533,"name":"initialValue","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get initial value of storage"}]},"type":{"type":"reference","id":570,"name":"T"},"inheritedFrom":{"type":"reference","name":"WebStorage.initialValue"}},"inheritedFrom":{"type":"reference","id":580,"name":"WebStorage.initialValue"}},{"id":534,"name":"value","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":43,"character":6}],"getSignature":{"id":535,"name":"value","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Read value from storage or return initial value if value does not exist in storage"}]},"type":{"type":"reference","id":570,"name":"T"},"inheritedFrom":{"type":"reference","name":"WebStorage.value"}},"inheritedFrom":{"type":"reference","id":582,"name":"WebStorage.value"}},{"id":544,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":78,"character":2}],"signatures":[{"id":545,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the value exists in storage"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"true if the value exists in storage"}]}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":593,"name":"WebStorage.has"}}],"inheritedFrom":{"type":"reference","id":592,"name":"WebStorage.has"}},{"id":546,"name":"reset","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":85,"character":2}],"signatures":[{"id":547,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Reset storage to initial value"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":595,"name":"WebStorage.reset"}}],"inheritedFrom":{"type":"reference","id":594,"name":"WebStorage.reset"}},{"id":536,"name":"write","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":57,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":59,"character":2}],"signatures":[{"id":537,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Write value to storage and return the value written"}]},"parameters":[{"id":538,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Value to write to storage"}]},"type":{"type":"reference","id":523,"name":"T"}}],"type":{"type":"reference","id":523,"name":"T"},"inheritedFrom":{"type":"reference","id":585,"name":"WebStorage.write"}},{"id":539,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":540,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":541,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":15}],"signatures":[{"id":542,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":543,"name":"prevValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":523,"name":"T"}}],"type":{"type":"reference","id":523,"name":"T"}}]}}}],"type":{"type":"reference","id":523,"name":"T"},"inheritedFrom":{"type":"reference","id":587,"name":"WebStorage.write"}}],"inheritedFrom":{"type":"reference","id":584,"name":"WebStorage.write"}}],"groups":[{"title":"Constructors","children":[521]},{"title":"Accessors","children":[532,534]},{"title":"Methods","children":[544,546,536]}],"sources":[{"fileName":"packages/storage/src/session-storage.ts","line":4,"character":13}],"typeParameters":[{"id":548,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","id":567,"typeArguments":[{"type":"reference","id":523,"name":"T"}],"name":"WebStorage"}],"permalink":"/api/storage/class/SessionStorage","previousId":490,"nextId":567},{"id":552,"name":"StorageOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":554,"name":"decode","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":5,"character":2}],"type":{"type":"reference","id":561,"typeArguments":[{"type":"reference","id":555,"name":"T"}],"name":"Decode"}},{"id":553,"name":"encode","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":4,"character":2}],"type":{"type":"reference","id":556,"typeArguments":[{"type":"reference","id":555,"name":"T"}],"name":"Encode"}}],"groups":[{"title":"Properties","children":[554,553]}],"sources":[{"fileName":"packages/storage/src/types.ts","line":3,"character":17}],"typeParameters":[{"id":555,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"permalink":"/api/storage/interface/StorageOptions","previousId":567,"nextId":561},{"id":561,"name":"Decode","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":9,"character":12}],"typeParameters":[{"id":565,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":562,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":9,"character":24}],"signatures":[{"id":563,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":564,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":565,"name":"T"}}]}},"permalink":"/api/storage#Decode","previousId":552,"nextId":556},{"id":556,"name":"Encode","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":8,"character":12}],"typeParameters":[{"id":560,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":557,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":8,"character":24}],"signatures":[{"id":558,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":559,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":560,"name":"T"}}],"type":{"type":"intrinsic","name":"string"}}]}},"permalink":"/api/storage#Encode","previousId":561,"nextId":550},{"id":550,"name":"ExcludeFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":1,"character":12}],"typeParameters":[{"id":551,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","id":551,"name":"T"},"extendsType":{"type":"reference","name":"Function","qualifiedName":"Function","package":"typescript"},"trueType":{"type":"intrinsic","name":"never"},"falseType":{"type":"reference","id":551,"name":"T"}},"permalink":"/api/storage#ExcludeFunction","previousId":556},{"id":567,"name":"WebStorage","kind":128,"kindString":"Class","flags":{},"children":[{"id":568,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":10,"character":2}],"signatures":[{"id":569,"name":"new WebStorage","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":570,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":571,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":572,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":570,"name":"T"}},{"id":573,"name":"storage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Storage","qualifiedName":"Storage","package":"typescript"}},{"id":574,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":552,"typeArguments":[{"type":"reference","id":570,"name":"T"}],"name":"StorageOptions"}}],"type":{"type":"reference","id":567,"typeArguments":[{"type":"reference","id":570,"name":"T"}],"name":"WebStorage"}}]},{"id":580,"name":"initialValue","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":36,"character":6}],"getSignature":{"id":581,"name":"initialValue","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get initial value of storage"}]},"type":{"type":"reference","id":570,"name":"T"}}},{"id":582,"name":"value","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":43,"character":6}],"getSignature":{"id":583,"name":"value","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Read value from storage or return initial value if value does not exist in storage"}]},"type":{"type":"reference","id":570,"name":"T"}}},{"id":592,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":78,"character":2}],"signatures":[{"id":593,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the value exists in storage"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"true if the value exists in storage"}]}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":594,"name":"reset","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":85,"character":2}],"signatures":[{"id":595,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Reset storage to initial value"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":584,"name":"write","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":57,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":59,"character":2}],"signatures":[{"id":585,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Write value to storage and return the value written"}]},"parameters":[{"id":586,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Value to write to storage"}]},"type":{"type":"reference","id":570,"name":"T"}}],"type":{"type":"reference","id":570,"name":"T"}},{"id":587,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":588,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":589,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":15}],"signatures":[{"id":590,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":591,"name":"prevValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":570,"name":"T"}}],"type":{"type":"reference","id":570,"name":"T"}}]}}}],"type":{"type":"reference","id":570,"name":"T"}}]}],"groups":[{"title":"Constructors","children":[568]},{"title":"Accessors","children":[580,582]},{"title":"Methods","children":[592,594,584]}],"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":3,"character":13}],"typeParameters":[{"id":596,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedBy":[{"type":"reference","id":490,"name":"LocalStorage"},{"type":"reference","id":520,"name":"SessionStorage"}],"permalink":"/api/storage/class/WebStorage","previousId":520,"nextId":552}],"groups":[{"title":"Classes","children":[490,520,567]},{"title":"Interfaces","children":[552]},{"title":"Type Aliases","children":[561,556,550]}],"sources":[{"fileName":"packages/storage/src/index.ts","line":1,"character":0}],"permalink":"/api/storage"},"urlSlug":"storage"}],"packageName":"@zero-dependency/storage","packageVersion":"1.3.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":322,"name":"@zero-dependency/utils","kind":2,"kindString":"Module","flags":{},"children":[{"id":761,"name":"Entries","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":3,"character":12}],"target":372,"permalink":"/api/utils#Entries"},{"id":759,"name":"Keys","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":1,"character":12}],"target":368,"permalink":"/api/utils#Keys"},{"id":762,"name":"Plain","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":4,"character":12}],"target":374,"permalink":"/api/utils#Plain"},{"id":753,"name":"Rgb","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":4,"character":17}],"target":318,"permalink":"/api/utils#Rgb"},{"id":760,"name":"Values","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":2,"character":12}],"target":370,"permalink":"/api/utils#Values"},{"id":764,"name":"addZero","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":24,"character":16}],"target":339,"permalink":"/api/utils#addZero"},{"id":768,"name":"capitalize","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":39,"character":16}],"target":399,"permalink":"/api/utils#capitalize"},{"id":766,"name":"clamp","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":63,"character":16}],"target":346,"permalink":"/api/utils#clamp"},{"id":755,"name":"debounce","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/debounce.ts","line":23,"character":16}],"target":259,"permalink":"/api/utils#debounce"},{"id":756,"name":"entries","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":26,"character":16}],"target":352,"permalink":"/api/utils#entries"},{"id":767,"name":"generateChars","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":16,"character":16}],"target":395,"permalink":"/api/utils#generateChars"},{"id":750,"name":"hexToRgb","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":22,"character":16}],"target":309,"permalink":"/api/utils#hexToRgb"},{"id":772,"name":"isArray","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":10,"character":16}],"target":271,"permalink":"/api/utils#isArray"},{"id":776,"name":"isBoolean","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":62,"character":16}],"target":283,"permalink":"/api/utils#isBoolean"},{"id":777,"name":"isFunction","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":75,"character":16}],"target":286,"permalink":"/api/utils#isFunction"},{"id":752,"name":"isHexColor","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":70,"character":16}],"target":315,"permalink":"/api/utils#isHexColor"},{"id":775,"name":"isNumber","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":49,"character":16}],"target":280,"permalink":"/api/utils#isNumber"},{"id":774,"name":"isObject","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":36,"character":16}],"target":277,"permalink":"/api/utils#isObject"},{"id":778,"name":"isObjectEmpty","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":88,"character":16}],"target":289,"permalink":"/api/utils#isObjectEmpty"},{"id":773,"name":"isString","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":23,"character":16}],"target":274,"permalink":"/api/utils#isString"},{"id":782,"name":"isTruthy","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":144,"character":16}],"target":304,"permalink":"/api/utils#isTruthy"},{"id":771,"name":"match","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/match.ts","line":16,"character":16}],"target":324,"permalink":"/api/utils#match"},{"id":780,"name":"notNull","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":117,"character":16}],"target":296,"permalink":"/api/utils#notNull"},{"id":779,"name":"notNullish","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":102,"character":16}],"target":292,"permalink":"/api/utils#notNullish"},{"id":781,"name":"notUndefined","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":130,"character":16}],"target":300,"permalink":"/api/utils#notUndefined"},{"id":758,"name":"omit","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":86,"character":16}],"target":362,"permalink":"/api/utils#omit"},{"id":757,"name":"pick","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":52,"character":16}],"target":356,"permalink":"/api/utils#pick"},{"id":748,"name":"pluralize","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/pluralize.ts","line":14,"character":16}],"target":383,"permalink":"/api/utils#pluralize"},{"id":765,"name":"randomNum","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":41,"character":16}],"target":342,"permalink":"/api/utils#randomNum"},{"id":769,"name":"randomToken","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":52,"character":16}],"target":402,"permalink":"/api/utils#randomToken"},{"id":770,"name":"repeatEveryChars","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":71,"character":16}],"target":404,"permalink":"/api/utils#repeatEveryChars"},{"id":751,"name":"rgbToHex","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":45,"character":16}],"target":312,"permalink":"/api/utils#rgbToHex"},{"id":749,"name":"sleep","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/sleep.ts","line":13,"character":22}],"target":391,"permalink":"/api/utils#sleep"},{"id":754,"name":"throttle","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/throttle.ts","line":18,"character":16}],"target":409,"permalink":"/api/utils#throttle"},{"id":763,"name":"toNumber","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":10,"character":16}],"target":336,"permalink":"/api/utils#toNumber"},{"id":259,"name":"debounce","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/debounce.ts","line":23,"character":16}],"signatures":[{"id":260,"name":"debounce","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new function that will only be executed after being idle for\\na certain amount of time. Useful for reducing the number of expensive\\nfunction calls."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new function that will only be executed after being idle for a certain amount of time."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst debouncedFn = debounce(() => {\\n  console.log(\'Hello\')\\n}, 1000)\\n\\ndebouncedFn()\\ndebouncedFn() // Logs \'Hello\' after 1 second\\n```"}]}]},"typeParameter":[{"id":264,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reflection","declaration":{"id":261,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/debounce.ts","line":23,"character":35}],"signatures":[{"id":262,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":263,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"parameters":[{"id":265,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The function to execute."}]},"type":{"type":"reference","id":264,"name":"T"}},{"id":266,"name":"ms","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of time to wait before executing the function."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reflection","declaration":{"id":267,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/debounce.ts","line":26,"character":3}],"signatures":[{"id":268,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":269,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":264,"name":"T"}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"permalink":"/api/utils/function/debounce","previousId":346,"nextId":352},{"id":271,"name":"isArray","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":10,"character":16}],"signatures":[{"id":272,"name":"isArray","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Type guard function that checks whether the given object is an array."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the object is an array of any type, otherwise false."}]}]},"parameters":[{"id":273,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to check."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"permalink":"/api/utils/function/isArray","previousId":309,"nextId":283},{"id":283,"name":"isBoolean","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":62,"character":16}],"signatures":[{"id":284,"name":"isBoolean","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the passed argument is a boolean or not."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the passed argument is a boolean, otherwise false."}]}]},"parameters":[{"id":285,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to be checked for boolean."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"intrinsic","name":"boolean"}}}],"permalink":"/api/utils/function/isBoolean","previousId":271,"nextId":286},{"id":286,"name":"isFunction","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":75,"character":16}],"signatures":[{"id":287,"name":"isFunction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the input object is a function."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the input object is a function, otherwise false."}]}]},"parameters":[{"id":288,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to be checked."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"reference","name":"Function","qualifiedName":"Function","package":"typescript"}}}],"permalink":"/api/utils/function/isFunction","previousId":283,"nextId":315},{"id":280,"name":"isNumber","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":49,"character":16}],"signatures":[{"id":281,"name":"isNumber","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given object is a number and not NaN."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if obj is a number and not NaN, false otherwise."}]}]},"parameters":[{"id":282,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to be checked."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"intrinsic","name":"number"}}}],"permalink":"/api/utils/function/isNumber","previousId":315,"nextId":277},{"id":277,"name":"isObject","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":36,"character":16}],"signatures":[{"id":278,"name":"isObject","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given value is an object."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the value is an object, false otherwise."}]}]},"parameters":[{"id":279,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to be checked."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}}],"permalink":"/api/utils/function/isObject","previousId":280,"nextId":289},{"id":289,"name":"isObjectEmpty","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":88,"character":16}],"signatures":[{"id":290,"name":"isObjectEmpty","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if an object is empty."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the object is empty."}]}]},"parameters":[{"id":291,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to check."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}}],"permalink":"/api/utils/function/isObjectEmpty","previousId":277,"nextId":274},{"id":274,"name":"isString","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":23,"character":16}],"signatures":[{"id":275,"name":"isString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given object is a string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the given object is a string, false otherwise."}]}]},"parameters":[{"id":276,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to check if it is a string."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"intrinsic","name":"string"}}}],"permalink":"/api/utils/function/isString","previousId":289,"nextId":304},{"id":304,"name":"isTruthy","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":144,"character":16}],"signatures":[{"id":305,"name":"isTruthy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks whether the given value is truthy, meaning it is not null, undefined,\\nfalse, 0, NaN, or an empty string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the value is truthy, false otherwise."}]}]},"typeParameter":[{"id":306,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":307,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to be checked."}]},"type":{"type":"reference","id":306,"name":"T"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"reference","id":306,"name":"T"}],"name":"NonNullable","qualifiedName":"NonNullable","package":"typescript"}}}],"permalink":"/api/utils/function/isTruthy","previousId":274,"nextId":324},{"id":296,"name":"notNull","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":117,"character":16}],"signatures":[{"id":297,"name":"notNull","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Defines a type guard function that determines whether a value is not null."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Whether the value is not null."}]}]},"typeParameter":[{"id":298,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":299,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":298,"name":"T"}]}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"reference","id":298,"name":"T"},{"type":"literal","value":null}],"name":"Exclude","qualifiedName":"Exclude","package":"typescript"}}}],"permalink":"/api/utils/function/notNull","previousId":324,"nextId":292},{"id":292,"name":"notNullish","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":102,"character":16}],"signatures":[{"id":293,"name":"notNullish","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Type guard that checks if a given value is not null or undefined."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A boolean indicating whether the value is not nullish."}]}]},"typeParameter":[{"id":294,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":295,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"reference","id":294,"name":"T"}]}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"reference","id":294,"name":"T"}],"name":"NonNullable","qualifiedName":"NonNullable","package":"typescript"}}}],"permalink":"/api/utils/function/notNullish","previousId":296,"nextId":300},{"id":300,"name":"notUndefined","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":130,"character":16}],"signatures":[{"id":301,"name":"notUndefined","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given value is not undefined."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the value is not undefined."}]}]},"typeParameter":[{"id":302,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":303,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"reference","id":302,"name":"T"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"reference","id":302,"name":"T"},{"type":"intrinsic","name":"undefined"}],"name":"Exclude","qualifiedName":"Exclude","package":"typescript"}}}],"permalink":"/api/utils/function/notUndefined","previousId":292,"nextId":362},{"id":318,"name":"Rgb","kind":256,"kindString":"Interface","flags":{},"children":[{"id":321,"name":"b","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":7,"character":2}],"type":{"type":"intrinsic","name":"number"}},{"id":320,"name":"g","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":6,"character":2}],"type":{"type":"intrinsic","name":"number"}},{"id":319,"name":"r","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":5,"character":2}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[321,320,319]}],"sources":[{"fileName":"packages/utils/src/hex.ts","line":4,"character":17}],"permalink":"/api/utils/interface/Rgb","previousId":336,"nextId":372},{"id":309,"name":"hexToRgb","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":22,"character":16}],"signatures":[{"id":310,"name":"hexToRgb","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a hexadecimal color code to its RGB equivalent."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An object containing the red, green, and blue values of the color, or null if the input is not a valid hexadecimal color code."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nhexToRgb(\'#fff\') // { r: 255, g: 255, b: 255 }\\n```"}]}]},"parameters":[{"id":311,"name":"hex","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The hexadecimal color code to convert."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","id":318,"name":"Rgb"},{"type":"literal","value":null}]}}],"permalink":"/api/utils/function/hexToRgb","previousId":395,"nextId":271},{"id":315,"name":"isHexColor","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":70,"character":16}],"signatures":[{"id":316,"name":"isHexColor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given string represents a valid hexadecimal color code."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An array of matched values if the input is a valid hexadecimal color code, or null otherwise."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nisHexColor(\'#fff\') // [\'#ffffff\', \'ff\', \'ff\', \'ff\']\\n```"}]}]},"parameters":[{"id":317,"name":"hex","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The hexadecimal color code to be validated."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","name":"RegExpExecArray","qualifiedName":"RegExpExecArray","package":"typescript"},{"type":"literal","value":null}]}}],"permalink":"/api/utils/function/isHexColor","previousId":286,"nextId":280},{"id":312,"name":"rgbToHex","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":45,"character":16}],"signatures":[{"id":313,"name":"rgbToHex","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Converts an RGB color object to a hexadecimal color string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A string that represents a hexadecimal color code."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nrgbToHex({ r: 255, g: 255, b: 255 }) // \'#ffffff\'\\n```"}]}]},"parameters":[{"id":314,"name":"color","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An object that represents an RGB color."}]},"type":{"type":"reference","id":318,"name":"Rgb"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/rgbToHex","previousId":404,"nextId":391},{"id":324,"name":"match","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/match.ts","line":16,"character":16}],"signatures":[{"id":325,"name":"match","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a predicate function that matches against a set of input predicates."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A predicate function that returns the output of the matching predicate function or "},{"kind":"code","text":"`null`"},{"kind":"text","text":" if no predicates match."}]}]},"typeParameter":[{"id":326,"name":"InputValue","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","name":"Input"}},{"id":327,"name":"OutValue","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":328,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A function that accepts a "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function and returns an object whose keys are the names of the predicates, and whose values are the corresponding predicate functions."}]},"type":{"type":"reflection","declaration":{"id":329,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/match.ts","line":17,"character":12}],"signatures":[{"id":330,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":331,"name":"test","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":332,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/match.ts","line":18,"character":10}],"signatures":[{"id":333,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":334,"name":"predicate","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":326,"name":"InputValue"},{"type":"intrinsic","name":"boolean"}],"name":"Predicate"}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"reference","id":327,"name":"OutValue"},{"type":"reference","typeArguments":[{"type":"reference","id":326,"name":"InputValue"},{"type":"reference","id":327,"name":"OutValue"}],"name":"Predicate"}]}],"name":"Record","qualifiedName":"Record","package":"typescript"}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":326,"name":"InputValue"},{"type":"reference","typeArguments":[{"type":"reference","id":327,"name":"OutValue"}],"name":"Out"}],"name":"Predicate"}}],"permalink":"/api/utils/function/match","previousId":304,"nextId":296},{"id":339,"name":"addZero","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":24,"character":16}],"signatures":[{"id":340,"name":"addZero","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a string representation of the given number with a leading zero if the number is less than 10."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A string representation of the given number with a leading zero if the number is less than 10."}]}]},"parameters":[{"id":341,"name":"num","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The number to add a leading zero to."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/addZero","nextId":399},{"id":346,"name":"clamp","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":63,"character":16}],"signatures":[{"id":347,"name":"clamp","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a value that is clamped between a minimum and a maximum value."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The clamped value."}]}]},"parameters":[{"id":348,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to clamp."}]},"type":{"type":"intrinsic","name":"number"}},{"id":349,"name":"min","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The minimum value."}]},"type":{"type":"intrinsic","name":"number"}},{"id":350,"name":"max","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The maximum value."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/api/utils/function/clamp","previousId":399,"nextId":259},{"id":342,"name":"randomNum","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":41,"character":16}],"signatures":[{"id":343,"name":"randomNum","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random number within a specified range."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A random number within the specified range."}]}]},"parameters":[{"id":344,"name":"min","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"},{"id":345,"name":"max","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/api/utils/function/randomNum","previousId":383,"nextId":402},{"id":336,"name":"toNumber","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":10,"character":16}],"signatures":[{"id":337,"name":"toNumber","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a number. If the value cannot be converted, 0 is returned."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The converted number or 0 if conversion fails."}]}]},"parameters":[{"id":338,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert."}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/api/utils/function/toNumber","previousId":409,"nextId":318},{"id":372,"name":"Entries","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":3,"character":12}],"typeParameters":[{"id":373,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"reference","id":368,"typeArguments":[{"type":"reference","id":373,"name":"T"}],"name":"Keys"},{"type":"reference","id":370,"typeArguments":[{"type":"reference","id":373,"name":"T"}],"name":"Values"}]}},"permalink":"/api/utils#Entries","previousId":318,"nextId":368},{"id":368,"name":"Keys","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":1,"character":12}],"typeParameters":[{"id":369,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","typeArguments":[{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":369,"name":"T"}},{"type":"intrinsic","name":"string"}],"name":"Extract","qualifiedName":"Extract","package":"typescript"},"permalink":"/api/utils#Keys","previousId":372,"nextId":374},{"id":374,"name":"Plain","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":4,"character":12}],"typeParameters":[{"id":381,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","id":381,"name":"T"},"extendsType":{"type":"reflection","declaration":{"id":375,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":4,"character":33}],"signatures":[{"id":376,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":377,"name":"a","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"trueType":{"type":"reference","id":381,"name":"T"},"falseType":{"type":"conditional","checkType":{"type":"reference","id":381,"name":"T"},"extendsType":{"type":"reflection","declaration":{"id":378,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":6,"character":14}],"signatures":[{"id":379,"name":"__type","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":380,"name":"a","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"trueType":{"type":"reference","id":381,"name":"T"},"falseType":{"type":"conditional","checkType":{"type":"reference","id":381,"name":"T"},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"Key","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":381,"name":"T"}},"templateType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Key"},"objectType":{"type":"reference","id":381,"name":"T"}}},"falseType":{"type":"reference","id":381,"name":"T"}}}},"permalink":"/api/utils#Plain","previousId":368,"nextId":370},{"id":370,"name":"Values","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":2,"character":12}],"typeParameters":[{"id":371,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":371,"name":"T"}},"objectType":{"type":"reference","id":371,"name":"T"}},"permalink":"/api/utils#Values","previousId":374},{"id":352,"name":"entries","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":26,"character":16}],"signatures":[{"id":353,"name":"entries","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of a given object\'s own enumerable string-keyed property [key, value] pairs."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns the new array of key-value pairs."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nentries({ a: 1, b: \'2\' }) // [[\'a\', 1], [\'b\', \'2\']]\\n```"}]}]},"typeParameter":[{"id":354,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":355,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to get the entries of."}]},"type":{"type":"reference","id":354,"name":"T"}}],"type":{"type":"reference","id":372,"typeArguments":[{"type":"reference","id":354,"name":"T"}],"name":"Entries"}}],"permalink":"/api/utils/function/entries","previousId":259,"nextId":395},{"id":362,"name":"omit","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":86,"character":16}],"signatures":[{"id":363,"name":"omit","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new object with all properties of target except the ones in keys."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new object with all properties of target except the ones in keys."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nomit({ a: 1, b: \'2\' }, [\'a\']) // { b: \'2\' }\\n```"}]}]},"typeParameter":[{"id":364,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the target object."}]}},{"id":365,"name":"K","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the keys to omit."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":366,"name":"target","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The target object to omit the keys from."}]},"type":{"type":"reference","id":364,"name":"T"}},{"id":367,"name":"keys","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The keys to omit from target."}]},"type":{"type":"array","elementType":{"type":"reference","id":365,"name":"K"}}}],"type":{"type":"reference","id":374,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":364,"name":"T"},{"type":"reference","id":365,"name":"K"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"}],"name":"Plain"}}],"permalink":"/api/utils/function/omit","previousId":300,"nextId":356},{"id":356,"name":"pick","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":52,"character":16}],"signatures":[{"id":357,"name":"pick","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new object with properties from the original object that are\\nspecified in the keys array."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new object with properties picked from the original object."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\npick({ a: 1, b: \'2\' }, [\'a\']) // { a: 1 }\\n```"}]}]},"typeParameter":[{"id":358,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the original object."}]}},{"id":359,"name":"K","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the keys of the original object to be picked."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":360,"name":"target","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The original object to pick properties from."}]},"type":{"type":"reference","id":358,"name":"T"}},{"id":361,"name":"keys","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An array of keys to pick from the original object."}]},"type":{"type":"array","elementType":{"type":"reference","id":359,"name":"K"}}}],"type":{"type":"reference","id":374,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":358,"name":"T"},{"type":"reference","id":359,"name":"K"}],"name":"Pick","qualifiedName":"Pick","package":"typescript"}],"name":"Plain"}}],"permalink":"/api/utils/function/pick","previousId":362,"nextId":383},{"id":383,"name":"pluralize","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/pluralize.ts","line":14,"character":16}],"signatures":[{"id":384,"name":"pluralize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a function that takes a "},{"kind":"code","text":"`TemplateStringsArray`"},{"kind":"text","text":" and an array of tokens and\\nreturns a string by concatenating the interpolated values of the strings and tokens."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The function that takes a "},{"kind":"code","text":"`TemplateStringsArray`"},{"kind":"text","text":" and an array of tokens and returns the final string."}]},{"tag":"@example","content":[{"kind":"text","text":"pluralize(2)"},{"kind":"code","text":"`packag${[\'e\', \'es\']} agenc${[\'y\', \'ies\']}`"},{"kind":"text","text":" // packages agencies"}]}]},"parameters":[{"id":385,"name":"total","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The total number of items."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reflection","declaration":{"id":386,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/pluralize.ts","line":16,"character":3}],"signatures":[{"id":387,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":388,"name":"strings","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TemplateStringsArray","qualifiedName":"TemplateStringsArray","package":"typescript"}},{"id":389,"name":"tokens","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/api/utils/function/pluralize","previousId":356,"nextId":342},{"id":391,"name":"sleep","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/sleep.ts","line":13,"character":22}],"signatures":[{"id":392,"name":"sleep","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Asynchronously waits for a specified number of milliseconds."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A Promise that resolves after the specified time has elapsed."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nawait sleep() // wait 1000 ms\\n```"}]}]},"parameters":[{"id":393,"name":"ms","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The time to wait in milliseconds. Default is 1000 ms."}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"1000"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}],"permalink":"/api/utils/function/sleep","previousId":312,"nextId":409},{"id":399,"name":"capitalize","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":39,"character":16}],"signatures":[{"id":400,"name":"capitalize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Capitalizes the first letter of a given string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The capitalized string."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\ncapitalize(\'hello\') // \'Hello\'\\n```"}]}]},"parameters":[{"id":401,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The string to capitalize."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/capitalize","previousId":339,"nextId":346},{"id":395,"name":"generateChars","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":16,"character":16}],"signatures":[{"id":396,"name":"generateChars","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates an array of characters between the startChar and endChar, inclusive."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An array of characters from startChar to endChar."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\ngenerateChars(\'a\', \'d\') // [\'a\', \'b\', \'c\', \'d\']\\n```"}]}]},"parameters":[{"id":397,"name":"startChar","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The first character of the array."}]},"type":{"type":"intrinsic","name":"string"}},{"id":398,"name":"endChar","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The last character of the array."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"permalink":"/api/utils/function/generateChars","previousId":352,"nextId":309},{"id":402,"name":"randomToken","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":52,"character":16}],"signatures":[{"id":403,"name":"randomToken","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a randomly generated token string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The token string generated by concatenating a random number and a base36 string after slicing off the first 2 characters."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nrandomToken() // \'6c9qicypz1\'\\n```"}]}]},"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/randomToken","previousId":342,"nextId":404},{"id":404,"name":"repeatEveryChars","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":71,"character":16}],"signatures":[{"id":405,"name":"repeatEveryChars","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Repeats every other character in the given string a specified number of times."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The modified string with every other character repeated."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nrepeatEveryChars(\'abc\', 2) // \'aabbcc\'\\n```"}]}]},"parameters":[{"id":406,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The input string to repeat characters from."}]},"type":{"type":"intrinsic","name":"string"}},{"id":407,"name":"repeats","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The number of times to repeat each character."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/repeatEveryChars","previousId":402,"nextId":312},{"id":409,"name":"throttle","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/throttle.ts","line":18,"character":16}],"signatures":[{"id":410,"name":"throttle","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new function that, when invoked repeatedly, invokes fn at most once per every ms milliseconds."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new function that wraps fn with throttling behavior."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst throttledFn = throttle((message) => {\\n  constole.log(message)\\n}, 1000)\\n```"}]}]},"typeParameter":[{"id":414,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reflection","declaration":{"id":411,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/throttle.ts","line":18,"character":35}],"signatures":[{"id":412,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":413,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":414,"name":"T"}],"name":"ReturnType","qualifiedName":"ReturnType","package":"typescript"}}]}}}],"parameters":[{"id":415,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The function to be throttled."}]},"type":{"type":"reference","id":414,"name":"T"}},{"id":416,"name":"ms","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The number of milliseconds to throttle invocations to."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reflection","declaration":{"id":417,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/throttle.ts","line":21,"character":3}],"signatures":[{"id":418,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":419,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":414,"name":"T"}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":414,"name":"T"}],"name":"ReturnType","qualifiedName":"ReturnType","package":"typescript"}}]}}}],"permalink":"/api/utils/function/throttle","previousId":391,"nextId":336}],"groups":[{"title":"Functions","children":[339,399,346,259,352,395,309,271,283,286,315,280,277,289,274,304,324,296,292,300,362,356,383,342,402,404,312,391,409,336]},{"title":"Interfaces","children":[318]},{"title":"Type Aliases","children":[372,368,374,370]}],"sources":[{"fileName":"packages/utils/src/index.ts","line":1,"character":0}],"permalink":"/api/utils"},"urlSlug":"utils"}],"packageName":"@zero-dependency/utils","packageVersion":"1.6.0"}]')}}]);