"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[778],{457:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":452,"name":"@zero-dependency/cookie","kind":2,"kindString":"Module","flags":{},"children":[{"id":827,"name":"Cookie","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":13,"character":13}],"target":417,"permalink":"/api/cookie#Cookie"},{"id":825,"name":"CookieAttributes","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/cookie/src/index.ts","line":4,"character":2}],"target":477,"permalink":"/api/cookie#CookieAttributes"},{"id":826,"name":"CookieDomainAttributes","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/cookie/src/index.ts","line":5,"character":2}],"target":474,"permalink":"/api/cookie#CookieDomainAttributes"},{"id":824,"name":"CookieOptions","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/cookie/src/index.ts","line":3,"character":2}],"target":468,"permalink":"/api/cookie#CookieOptions"},{"id":417,"name":"Cookie","kind":128,"kindString":"Class","flags":{},"children":[{"id":418,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":18,"character":2}],"signatures":[{"id":419,"name":"new Cookie","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":420,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":421,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":468,"typeArguments":[{"type":"reference","id":420,"name":"T"}],"name":"CookieOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":417,"typeArguments":[{"type":"reference","id":420,"name":"T"}],"name":"Cookie"}}]},{"id":425,"name":"attributes","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":40,"character":6},{"fileName":"packages/cookie/src/cookie.ts","line":48,"character":6}],"getSignature":{"id":426,"name":"attributes","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get cookie attributes"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"cookie attributes"}]}]},"type":{"type":"reference","id":477,"name":"CookieAttributes"}},"setSignature":{"id":427,"name":"attributes","kind":1048576,"kindString":"Set signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Set cookie attributes"}]},"parameters":[{"id":428,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie attributes"}]},"type":{"type":"reference","id":477,"name":"CookieAttributes"}}],"type":{"type":"intrinsic","name":"void"}}},{"id":429,"name":"get","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":57,"character":2}],"signatures":[{"id":430,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get cookie value"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"cookie value or "},{"kind":"code","text":"`null`"},{"kind":"text","text":" if cookie does not exist"}]}]},"typeParameter":[{"id":431,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":432,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie name"}]},"type":{"type":"reference","id":431,"name":"Name"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"indexedAccess","indexType":{"type":"reference","id":431,"name":"Name"},"objectType":{"type":"reference","id":420,"name":"T"}}]}}]},{"id":447,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":137,"character":2}],"signatures":[{"id":448,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Check if cookie exists"}]},"typeParameter":[{"id":449,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":450,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie name"}]},"type":{"type":"reference","id":449,"name":"Name"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":439,"name":"list","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":107,"character":2}],"signatures":[{"id":440,"name":"list","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get all cookies"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"all document cookies"}]}]},"typeParameter":[{"id":441,"name":"Cookies","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"reference","id":420,"name":"T"}}],"type":{"type":"reference","id":441,"name":"Cookies"}}]},{"id":442,"name":"remove","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":126,"character":2}],"signatures":[{"id":443,"name":"remove","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Remove cookie"}]},"typeParameter":[{"id":444,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":445,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie name"}]},"type":{"type":"reference","id":444,"name":"Name"}},{"id":446,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"cookie domain attributes"}]},"type":{"type":"reference","id":474,"name":"CookieDomainAttributes"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":433,"name":"set","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":68,"character":2}],"signatures":[{"id":434,"name":"set","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Set cookie value"}]},"typeParameter":[{"id":435,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":436,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie name"}]},"type":{"type":"reference","id":435,"name":"Name"}},{"id":437,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"cookie value"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"indexedAccess","indexType":{"type":"reference","id":435,"name":"Name"},"objectType":{"type":"reference","id":420,"name":"T"}}]}},{"id":438,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"cookie attributes"}]},"type":{"type":"reference","id":477,"name":"CookieAttributes"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","children":[418]},{"title":"Accessors","children":[425]},{"title":"Methods","children":[429,447,439,442,433]}],"sources":[{"fileName":"packages/cookie/src/cookie.ts","line":13,"character":13}],"typeParameters":[{"id":451,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"permalink":"/api/cookie/class/Cookie","nextId":477},{"id":477,"name":"CookieAttributes","kind":256,"kindString":"Interface","flags":{},"children":[{"id":483,"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":29,"character":2}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":476,"name":"CookieDomainAttributes.domain"}},{"id":478,"name":"expires","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":33,"character":2}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"reference","name":"Date","qualifiedName":"Date","package":"typescript"}]}},{"id":480,"name":"max-age","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":35,"character":2}],"type":{"type":"intrinsic","name":"number"}},{"id":482,"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":28,"character":2}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":475,"name":"CookieDomainAttributes.path"}},{"id":481,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":36,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}},{"id":479,"name":"secure","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":34,"character":2}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[483,478,480,482,481,479]}],"sources":[{"fileName":"packages/cookie/src/types.ts","line":32,"character":17}],"extendedTypes":[{"type":"reference","id":474,"name":"CookieDomainAttributes"}],"permalink":"/api/cookie/interface/CookieAttributes","previousId":417,"nextId":474},{"id":474,"name":"CookieDomainAttributes","kind":256,"kindString":"Interface","flags":{},"children":[{"id":476,"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":29,"character":2}],"type":{"type":"intrinsic","name":"string"}},{"id":475,"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/cookie/src/types.ts","line":28,"character":2}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[476,475]}],"sources":[{"fileName":"packages/cookie/src/types.ts","line":27,"character":17}],"extendedBy":[{"type":"reference","id":477,"name":"CookieAttributes"}],"permalink":"/api/cookie/interface/CookieDomainAttributes","previousId":477,"nextId":468},{"id":468,"name":"CookieOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":471,"name":"attributes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Cookie attribute defaults can be set globally"}]},"sources":[{"fileName":"packages/cookie/src/types.ts","line":19,"character":2}],"type":{"type":"reference","id":477,"name":"CookieAttributes"}},{"id":470,"name":"decode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Decode value after getting cookie"}]},"sources":[{"fileName":"packages/cookie/src/types.ts","line":14,"character":2}],"type":{"type":"reference","id":462,"typeArguments":[{"type":"reference","id":473,"name":"T"}],"name":"Decode"}},{"id":469,"name":"encode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Encode value before setting cookie"}]},"sources":[{"fileName":"packages/cookie/src/types.ts","line":9,"character":2}],"type":{"type":"reference","id":456,"typeArguments":[{"type":"reference","id":473,"name":"T"}],"name":"Encode"}},{"id":472,"name":"initialValue","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set initial cookie value"}]},"sources":[{"fileName":"packages/cookie/src/types.ts","line":24,"character":2}],"type":{"type":"reference","id":473,"name":"T"}}],"groups":[{"title":"Properties","children":[471,470,469,472]}],"sources":[{"fileName":"packages/cookie/src/types.ts","line":5,"character":17}],"typeParameters":[{"id":473,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"permalink":"/api/cookie/interface/CookieOptions","previousId":474,"nextId":462},{"id":462,"name":"Decode","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":3,"character":12}],"typeParameters":[{"id":467,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":463,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":3,"character":24}],"signatures":[{"id":464,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":465,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":466,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":454,"typeArguments":[{"type":"reference","id":467,"name":"T"}],"name":"KeyOf"}}],"type":{"type":"intrinsic","name":"any"}}]}},"permalink":"/api/cookie#Decode","previousId":468,"nextId":456},{"id":456,"name":"Encode","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":2,"character":12}],"typeParameters":[{"id":461,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":457,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":2,"character":24}],"signatures":[{"id":458,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":459,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":460,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":454,"typeArguments":[{"type":"reference","id":461,"name":"T"}],"name":"KeyOf"}}],"type":{"type":"intrinsic","name":"any"}}]}},"permalink":"/api/cookie#Encode","previousId":462,"nextId":454},{"id":454,"name":"KeyOf","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/cookie/src/types.ts","line":1,"character":12}],"typeParameters":[{"id":455,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","typeArguments":[{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":455,"name":"T"}},{"type":"intrinsic","name":"string"}],"name":"Extract","qualifiedName":"Extract","package":"typescript"},"permalink":"/api/cookie#KeyOf","previousId":456}],"groups":[{"title":"Classes","children":[417]},{"title":"Interfaces","children":[477,474,468]},{"title":"Type Aliases","children":[462,456,454]}],"sources":[{"fileName":"packages/cookie/src/index.ts","line":1,"character":0}],"permalink":"/api/cookie"},"urlSlug":"cookie"}],"packageName":"@zero-dependency/cookie","packageVersion":"1.11.3"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":727,"name":"@zero-dependency/dom","kind":2,"kindString":"Module","flags":{},"children":[{"id":838,"name":"LocationObserver","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/location-observer.ts","line":19,"character":13}],"target":729,"permalink":"/api/dom#LocationObserver"},{"id":837,"name":"addEvent","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":73,"character":16},{"fileName":"packages/dom/src/html.ts","line":79,"character":16}],"target":715,"permalink":"/api/dom#addEvent"},{"id":834,"name":"el","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":24,"character":16}],"target":700,"permalink":"/api/dom#el"},{"id":836,"name":"nbsp","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":58,"character":16}],"target":713,"permalink":"/api/dom#nbsp"},{"id":839,"name":"observeElement","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":10,"character":16}],"target":747,"permalink":"/api/dom#observeElement"},{"id":835,"name":"text","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":51,"character":16}],"target":710,"permalink":"/api/dom#text"},{"id":840,"name":"waitElement","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":36,"character":16}],"target":757,"permalink":"/api/dom#waitElement"},{"id":715,"name":"addEvent","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":73,"character":16},{"fileName":"packages/dom/src/html.ts","line":79,"character":16}],"signatures":[{"id":716,"name":"addEvent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Add an event listener to an element"}]},"typeParameter":[{"id":717,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"parameters":[{"id":718,"name":"el","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The element to add the event listener to"}]},"type":{"type":"reference","name":"HTMLElement","qualifiedName":"HTMLElement","package":"typescript"}},{"id":719,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event type to listen for"}]},"type":{"type":"reference","id":717,"name":"T"}},{"id":720,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The callback to call when the event is fired"}]},"type":{"type":"reflection","declaration":{"id":721,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":76,"character":12}],"signatures":[{"id":722,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":723,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":717,"name":"T"}],"name":"WindowEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":724,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options to pass to "},{"kind":"code","text":"`addEventListener`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","name":"AddEventListenerOptions","qualifiedName":"AddEventListenerOptions","package":"typescript"}]}}],"type":{"type":"reflection","declaration":{"id":725,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":78,"character":3}],"signatures":[{"id":726,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}],"permalink":"/api/dom/function/addEvent","previousId":729,"nextId":700},{"id":700,"name":"el","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":24,"character":16}],"signatures":[{"id":701,"name":"el","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Create an element"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The created element"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nel(\'div\', { id: \'foo\' }, \'Hello world\')\\nel(\'div\', \'Hello world\')\\nel(\'div\', [el(\'span\', \'Hello\'), el(\'span\', \'world\')])\\nel(\'div\', el(\'span\', \'Hello world\'))\\nel(\'div\', el(\'span\', \'Hello\'), el(\'span\', \'world\'))\\nel(\'div\', el(\'span\', \'Hello world\'), \'world\')\\n```"}]}]},"typeParameter":[{"id":702,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"HTMLElementTagNameMap","qualifiedName":"HTMLElementTagNameMap","package":"typescript"}}}],"parameters":[{"id":703,"name":"tag","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The tag name of the element to create"}]},"type":{"type":"reference","id":702,"name":"T"}},{"id":704,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The attributes or children to set on the element"}]},"type":{"type":"union","types":[{"type":"reference","name":"HTMLElement","qualifiedName":"HTMLElement","package":"typescript"},{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":705,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":706,"name":"style","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":5,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":0},{"type":"intersection","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":707,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]}]},{"type":"intersection","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":708,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}]}],"name":"Properties","qualifiedName":"Properties","package":"csstype"}}],"groups":[{"title":"Properties","children":[706]}],"sources":[{"fileName":"packages/dom/src/html.ts","line":4,"character":65}]}},{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":702,"name":"T"},"objectType":{"type":"reference","name":"HTMLElementTagNameMap","qualifiedName":"HTMLElementTagNameMap","package":"typescript"}},{"type":"literal","value":"style"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"}]}],"name":"Partial","qualifiedName":"Partial","package":"typescript"},{"type":"reference","name":"Children"}]}},{"id":709,"name":"children","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The children to append to the element"}]},"type":{"type":"reference","name":"Children"}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","id":702,"name":"T"},"objectType":{"type":"reference","name":"HTMLElementTagNameMap","qualifiedName":"HTMLElementTagNameMap","package":"typescript"}}}],"permalink":"/api/dom/function/el","previousId":715,"nextId":713},{"id":713,"name":"nbsp","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":58,"character":16}],"signatures":[{"id":714,"name":"nbsp","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A non-breaking space"}]},"type":{"type":"reference","name":"Text","qualifiedName":"Text","package":"typescript"}}],"permalink":"/api/dom/function/nbsp","previousId":700,"nextId":747},{"id":710,"name":"text","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/html.ts","line":51,"character":16}],"signatures":[{"id":711,"name":"text","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Create a text node"}]},"parameters":[{"id":712,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The string to create a text node from"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Text","qualifiedName":"Text","package":"typescript"}}],"permalink":"/api/dom/function/text","previousId":747,"nextId":757},{"id":729,"name":"LocationObserver","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Observe changes to the location"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nconst observer = new LocationObserver<{ id: string }>()\\nobserver.on(\'pushState\', (location, state) => {\\n  console.log(state.id)\\n})\\n```"}]}]},"children":[{"id":730,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/dom/src/location-observer.ts","line":22,"character":2}],"signatures":[{"id":731,"name":"new LocationObserver","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":732,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","id":729,"typeArguments":[{"type":"reference","id":732,"name":"T"}],"name":"LocationObserver"}}]},{"id":741,"name":"off","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/dom/src/location-observer.ts","line":46,"character":2}],"signatures":[{"id":742,"name":"off","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":743,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","id":732,"name":"T"}],"name":"Events"}}}],"parameters":[{"id":744,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":743,"name":"E"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":734,"name":"on","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/dom/src/location-observer.ts","line":41,"character":2}],"signatures":[{"id":735,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":736,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","id":732,"name":"T"}],"name":"Events"}}}],"parameters":[{"id":737,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":736,"name":"E"}},{"id":738,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":736,"name":"E"},"objectType":{"type":"reference","typeArguments":[{"type":"reference","id":732,"name":"T"}],"name":"Events"}}}],"type":{"type":"reflection","declaration":{"id":739,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/dom/src/location-observer.ts","line":41,"character":67}],"signatures":[{"id":740,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}],"groups":[{"title":"Constructors","children":[730]},{"title":"Methods","children":[741,734]}],"sources":[{"fileName":"packages/dom/src/location-observer.ts","line":19,"character":13}],"typeParameters":[{"id":745,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"permalink":"/api/dom/class/LocationObserver","nextId":715},{"id":747,"name":"observeElement","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":10,"character":16}],"signatures":[{"id":748,"name":"observeElement","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Observe mutations on an element"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A function to disconnect the observer"}]}]},"typeParameter":[{"id":749,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":749,"name":"T"}],"name":"Element","qualifiedName":"Element","package":"typescript"},"default":{"type":"reference","name":"Element","qualifiedName":"Element","package":"typescript"}}],"parameters":[{"id":750,"name":"el","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The element to observe"}]},"type":{"type":"reference","id":749,"name":"T"}},{"id":751,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The callback to call when a mutation occurs"}]},"type":{"type":"reflection","declaration":{"id":752,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":12,"character":12}],"signatures":[{"id":753,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":754,"name":"mutation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"MutationRecord","qualifiedName":"MutationRecord","package":"typescript"}},{"id":755,"name":"observer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"MutationObserver","qualifiedName":"MutationObserver","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":756,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options to pass to the "},{"kind":"code","text":"`MutationObserver`"}]},"type":{"type":"reference","name":"MutationObserverInit","qualifiedName":"MutationObserverInit","package":"typescript"}}],"type":{"type":"reference","name":"Disconnect"}}],"permalink":"/api/dom/function/observeElement","previousId":713,"nextId":710},{"id":757,"name":"waitElement","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/dom/src/mutation-observer.ts","line":36,"character":16}],"signatures":[{"id":758,"name":"waitElement","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Wait for an element to appear in the DOM"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves when the element is found"}]}]},"typeParameter":[{"id":759,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":759,"name":"T"}],"name":"Element","qualifiedName":"Element","package":"typescript"},"default":{"type":"reference","name":"Element","qualifiedName":"Element","package":"typescript"}}],"parameters":[{"id":760,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The selector to wait for"}]},"type":{"type":"intrinsic","name":"string"}},{"id":761,"name":"target","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The element to search in"}]},"type":{"type":"reference","name":"HTMLElement","qualifiedName":"HTMLElement","package":"typescript"},"defaultValue":"document.documentElement"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":759,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}],"permalink":"/api/dom/function/waitElement","previousId":710}],"groups":[{"title":"Classes","children":[729]},{"title":"Functions","children":[715,700,713,747,710,757]}],"sources":[{"fileName":"packages/dom/src/index.ts","line":1,"character":0}],"permalink":"/api/dom"},"urlSlug":"dom"}],"packageName":"@zero-dependency/dom","packageVersion":"1.6.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":644,"name":"@zero-dependency/emitter","kind":2,"kindString":"Module","flags":{},"children":[{"id":833,"name":"Emitter","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":3,"character":13}],"target":594,"permalink":"/api/emitter#Emitter"},{"id":832,"name":"EventMap","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/emitter/src/index.ts","line":2,"character":14}],"target":646,"permalink":"/api/emitter#EventMap"},{"id":594,"name":"Emitter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Type-safe event emitter.\\n\\nUse it like this:\\n\\n"},{"kind":"code","text":"```typescript\\ntype MyEvents = {\\n  error: (error: Error) => void;\\n  message: (from: string, content: string) => void;\\n}\\n\\nconst myEmitter = new EventEmitter() as TypedEmitter<MyEvents>;\\n\\nmyEmitter.emit(\\"error\\", \\"x\\")  // <- Will catch this type error;\\n```"}]},"children":[{"id":595,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":596,"name":"new Emitter","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":597,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":646,"name":"EventMap"}}],"type":{"type":"reference","id":594,"typeArguments":[{"type":"reference","id":597,"name":"T"}],"name":"Emitter"}}]},{"id":604,"name":"addListener","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":23,"character":2}],"signatures":[{"id":605,"name":"addListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Alias for "},{"kind":"code","text":"`addListener`"}]},"typeParameter":[{"id":606,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":607,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":606,"name":"E"}},{"id":608,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":606,"name":"E"},"objectType":{"type":"reference","id":597,"name":"T"}}}],"type":{"type":"reference","id":594,"typeArguments":[{"type":"reference","id":597,"name":"T"}],"name":"Emitter"},"implementationOf":{"type":"reference","id":655,"name":"TypedEventEmitter.addListener"}}],"implementationOf":{"type":"reference","id":654,"name":"TypedEventEmitter.addListener"}},{"id":614,"name":"emit","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":51,"character":2}],"signatures":[{"id":615,"name":"emit","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Emit an event"}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the event had listeners, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"typeParameter":[{"id":616,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":617,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event name"}]},"type":{"type":"reference","id":616,"name":"E"}},{"id":618,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The arguments to pass to the listeners"}]},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":616,"name":"E"},"objectType":{"type":"reference","id":597,"name":"T"}}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","id":684,"name":"TypedEventEmitter.emit"}}],"implementationOf":{"type":"reference","id":683,"name":"TypedEventEmitter.emit"}},{"id":633,"name":"eventNames","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":100,"character":2}],"signatures":[{"id":634,"name":"eventNames","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get the list of event names"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An array of event names"}]}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"}]}},"implementationOf":{"type":"reference","id":689,"name":"TypedEventEmitter.eventNames"}}],"implementationOf":{"type":"reference","id":688,"name":"TypedEventEmitter.eventNames"}},{"id":639,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":118,"character":2}],"signatures":[{"id":640,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get the number of listeners for an event"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The number of listeners for the event"}]}]},"typeParameter":[{"id":641,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":642,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event name"}]},"type":{"type":"reference","id":641,"name":"E"}}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","id":695,"name":"TypedEventEmitter.listenerCount"}}],"implementationOf":{"type":"reference","id":694,"name":"TypedEventEmitter.listenerCount"}},{"id":635,"name":"listeners","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":109,"character":2}],"signatures":[{"id":636,"name":"listeners","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get the list of listeners for an event"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An array of listeners"}]}]},"typeParameter":[{"id":637,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":638,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event name"}]},"type":{"type":"reference","id":637,"name":"E"}}],"type":{"type":"array","elementType":{"type":"indexedAccess","indexType":{"type":"reference","id":637,"name":"E"},"objectType":{"type":"reference","id":597,"name":"T"}}},"implementationOf":{"type":"reference","id":691,"name":"TypedEventEmitter.listeners"}}],"implementationOf":{"type":"reference","id":690,"name":"TypedEventEmitter.listeners"}},{"id":619,"name":"off","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":66,"character":2}],"signatures":[{"id":620,"name":"off","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Remove an event listener"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The emitter"}]}]},"typeParameter":[{"id":621,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":622,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event name"}]},"type":{"type":"reference","id":621,"name":"E"}},{"id":623,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The listener function"}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":621,"name":"E"},"objectType":{"type":"reference","id":597,"name":"T"}}}],"type":{"type":"reference","id":594,"typeArguments":[{"type":"reference","id":597,"name":"T"}],"name":"Emitter"},"implementationOf":{"type":"reference","id":670,"name":"TypedEventEmitter.off"}}],"implementationOf":{"type":"reference","id":669,"name":"TypedEventEmitter.off"}},{"id":599,"name":"on","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":12,"character":2}],"signatures":[{"id":600,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Add an event listener"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The emitter"}]}]},"typeParameter":[{"id":601,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":602,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event name"}]},"type":{"type":"reference","id":601,"name":"E"}},{"id":603,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The listener function"}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":601,"name":"E"},"objectType":{"type":"reference","id":597,"name":"T"}}}],"type":{"type":"reference","id":594,"typeArguments":[{"type":"reference","id":597,"name":"T"}],"name":"Emitter"},"implementationOf":{"type":"reference","id":660,"name":"TypedEventEmitter.on"}}],"implementationOf":{"type":"reference","id":659,"name":"TypedEventEmitter.on"}},{"id":609,"name":"once","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":34,"character":2}],"signatures":[{"id":610,"name":"once","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Add an event listener that will be called only once"}],"blockTags":[{"tag":"@note","content":[{"kind":"text","text":"The listener is wrapped in a wrapper function, so it cannot be equal to the original listener"}]},{"tag":"@returns","content":[{"kind":"text","text":"The emitter"}]}]},"typeParameter":[{"id":611,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":612,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The event name"}]},"type":{"type":"reference","id":611,"name":"E"}},{"id":613,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The listener function"}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":611,"name":"E"},"objectType":{"type":"reference","id":597,"name":"T"}}}],"type":{"type":"reference","id":594,"typeArguments":[{"type":"reference","id":597,"name":"T"}],"name":"Emitter"},"implementationOf":{"type":"reference","id":665,"name":"TypedEventEmitter.once"}}],"implementationOf":{"type":"reference","id":664,"name":"TypedEventEmitter.once"}},{"id":629,"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":86,"character":2}],"signatures":[{"id":630,"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Remove all event listeners"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The emitter"}]}]},"typeParameter":[{"id":631,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":632,"name":"event","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The event name"}]},"type":{"type":"reference","id":631,"name":"E"}}],"type":{"type":"reference","id":594,"typeArguments":[{"type":"reference","id":597,"name":"T"}],"name":"Emitter"},"implementationOf":{"type":"reference","id":680,"name":"TypedEventEmitter.removeAllListeners"}}],"implementationOf":{"type":"reference","id":679,"name":"TypedEventEmitter.removeAllListeners"}},{"id":624,"name":"removeListener","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":77,"character":2}],"signatures":[{"id":625,"name":"removeListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Alias for "},{"kind":"code","text":"`off`"}]},"typeParameter":[{"id":626,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":627,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":626,"name":"E"}},{"id":628,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":626,"name":"E"},"objectType":{"type":"reference","id":597,"name":"T"}}}],"type":{"type":"reference","id":594,"typeArguments":[{"type":"reference","id":597,"name":"T"}],"name":"Emitter"},"implementationOf":{"type":"reference","id":675,"name":"TypedEventEmitter.removeListener"}}],"implementationOf":{"type":"reference","id":674,"name":"TypedEventEmitter.removeListener"}}],"groups":[{"title":"Constructors","children":[595]},{"title":"Methods","children":[604,614,633,639,635,619,599,609,629,624]}],"sources":[{"fileName":"packages/emitter/src/emitter.ts","line":3,"character":13}],"typeParameters":[{"id":643,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":646,"name":"EventMap"}}],"implementedTypes":[{"type":"reference","id":653,"typeArguments":[{"type":"reference","id":597,"name":"T"}],"name":"TypedEventEmitter"}],"permalink":"/api/emitter/class/Emitter","nextId":653},{"id":653,"name":"TypedEventEmitter","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Type-safe event emitter.\\n\\nUse it like this:\\n\\n"},{"kind":"code","text":"```typescript\\ntype MyEvents = {\\n  error: (error: Error) => void;\\n  message: (from: string, content: string) => void;\\n}\\n\\nconst myEmitter = new EventEmitter() as TypedEmitter<MyEvents>;\\n\\nmyEmitter.emit(\\"error\\", \\"x\\")  // <- Will catch this type error;\\n```"}]},"children":[{"id":654,"name":"addListener","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":24,"character":2}],"signatures":[{"id":655,"name":"addListener","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":656,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":657,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":656,"name":"E"}},{"id":658,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":656,"name":"E"},"objectType":{"type":"reference","id":698,"name":"Events"}}}],"type":{"type":"reference","id":653,"typeArguments":[{"type":"reference","id":698,"name":"Events"}],"name":"TypedEventEmitter"}}]},{"id":683,"name":"emit","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":32,"character":2}],"signatures":[{"id":684,"name":"emit","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":685,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":686,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":685,"name":"E"}},{"id":687,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":685,"name":"E"},"objectType":{"type":"reference","id":698,"name":"Events"}}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":688,"name":"eventNames","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":36,"character":2}],"signatures":[{"id":689,"name":"eventNames","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":698,"name":"Events"}}]}}}]},{"id":694,"name":"listenerCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":38,"character":2}],"signatures":[{"id":695,"name":"listenerCount","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":696,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":697,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":696,"name":"E"}}],"type":{"type":"intrinsic","name":"number"}}]},{"id":690,"name":"listeners","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":37,"character":2}],"signatures":[{"id":691,"name":"listeners","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":692,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":693,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":692,"name":"E"}}],"type":{"type":"array","elementType":{"type":"indexedAccess","indexType":{"type":"reference","id":692,"name":"E"},"objectType":{"type":"reference","id":698,"name":"Events"}}}}]},{"id":669,"name":"off","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":28,"character":2}],"signatures":[{"id":670,"name":"off","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":671,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":672,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":671,"name":"E"}},{"id":673,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":671,"name":"E"},"objectType":{"type":"reference","id":698,"name":"Events"}}}],"type":{"type":"reference","id":653,"typeArguments":[{"type":"reference","id":698,"name":"Events"}],"name":"TypedEventEmitter"}}]},{"id":659,"name":"on","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":25,"character":2}],"signatures":[{"id":660,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":661,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":662,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":661,"name":"E"}},{"id":663,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":661,"name":"E"},"objectType":{"type":"reference","id":698,"name":"Events"}}}],"type":{"type":"reference","id":653,"typeArguments":[{"type":"reference","id":698,"name":"Events"}],"name":"TypedEventEmitter"}}]},{"id":664,"name":"once","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":26,"character":2}],"signatures":[{"id":665,"name":"once","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":666,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":667,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":666,"name":"E"}},{"id":668,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":666,"name":"E"},"objectType":{"type":"reference","id":698,"name":"Events"}}}],"type":{"type":"reference","id":653,"typeArguments":[{"type":"reference","id":698,"name":"Events"}],"name":"TypedEventEmitter"}}]},{"id":679,"name":"removeAllListeners","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":30,"character":2}],"signatures":[{"id":680,"name":"removeAllListeners","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":681,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":682,"name":"event","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":681,"name":"E"}}],"type":{"type":"reference","id":653,"typeArguments":[{"type":"reference","id":698,"name":"Events"}],"name":"TypedEventEmitter"}}]},{"id":674,"name":"removeListener","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":29,"character":2}],"signatures":[{"id":675,"name":"removeListener","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":676,"name":"E","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":677,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":676,"name":"E"}},{"id":678,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":676,"name":"E"},"objectType":{"type":"reference","id":698,"name":"Events"}}}],"type":{"type":"reference","id":653,"typeArguments":[{"type":"reference","id":698,"name":"Events"}],"name":"TypedEventEmitter"}}]}],"groups":[{"title":"Methods","children":[654,683,688,694,690,669,659,664,679,674]}],"sources":[{"fileName":"packages/emitter/src/types.ts","line":23,"character":17}],"typeParameters":[{"id":698,"name":"Events","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":646,"name":"EventMap"}}],"implementedBy":[{"type":"reference","id":594,"name":"Emitter"}],"permalink":"/api/emitter/interface/TypedEventEmitter","previousId":594,"nextId":646},{"id":646,"name":"EventMap","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":3,"character":12}],"type":{"type":"reflection","declaration":{"id":647,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":3,"character":23}],"indexSignature":{"id":648,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":649,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":650,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/emitter/src/types.ts","line":4,"character":17}],"signatures":[{"id":651,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":652,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}}},"permalink":"/api/emitter#EventMap","previousId":653}],"groups":[{"title":"Classes","children":[594]},{"title":"Interfaces","children":[653]},{"title":"Type Aliases","children":[646]}],"sources":[{"fileName":"packages/emitter/src/index.ts","line":1,"character":0}],"permalink":"/api/emitter"},"urlSlug":"emitter"}],"packageName":"@zero-dependency/emitter","packageVersion":"1.2.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":237,"name":"@zero-dependency/fetcher","kind":2,"kindString":"Module","flags":{},"children":[{"id":781,"name":"Fetcher","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":11,"character":13}],"target":196,"permalink":"/api/fetcher#Fetcher"},{"id":782,"name":"FetcherError","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":1,"character":13}],"target":179,"permalink":"/api/fetcher#FetcherError"},{"id":787,"name":"FetcherMethods","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":18,"character":12}],"target":247,"permalink":"/api/fetcher#FetcherMethods"},{"id":783,"name":"FetcherOptions","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":3,"character":12}],"target":239,"permalink":"/api/fetcher#FetcherOptions"},{"id":784,"name":"FetcherParams","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":8,"character":12}],"target":240,"permalink":"/api/fetcher#FetcherParams"},{"id":788,"name":"FetcherRequest","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":20,"character":12}],"target":248,"permalink":"/api/fetcher#FetcherRequest"},{"id":785,"name":"FetcherRequestInit","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":10,"character":12}],"target":241,"permalink":"/api/fetcher#FetcherRequestInit"},{"id":786,"name":"FetcherRequestOptions","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":14,"character":12}],"target":244,"permalink":"/api/fetcher#FetcherRequestOptions"},{"id":780,"name":"fetcher","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":84,"character":22}],"target":192,"permalink":"/api/fetcher#fetcher"},{"id":177,"name":"METHODS","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"packages/fetcher/src/constants.ts","line":1,"character":13}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"literal","value":"get"},{"type":"literal","value":"post"},{"type":"literal","value":"put"},{"type":"literal","value":"patch"},{"type":"literal","value":"delete"},{"type":"literal","value":"head"},{"type":"literal","value":"options"}]}},"defaultValue":"...","permalink":"/api/fetcher#METHODS","previousId":244},{"id":196,"name":"Fetcher","kind":128,"kindString":"Class","flags":{},"children":[{"id":197,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":23,"character":2}],"signatures":[{"id":198,"name":"new Fetcher","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":199,"name":"baseURL","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":200,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":239,"name":"FetcherOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":196,"name":"Fetcher"}}]},{"id":207,"name":"delete","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":19,"character":2}],"type":{"type":"reference","id":248,"name":"FetcherRequest"}},{"id":203,"name":"get","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":15,"character":2}],"type":{"type":"reference","id":248,"name":"FetcherRequest"}},{"id":208,"name":"head","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":20,"character":2}],"type":{"type":"reference","id":248,"name":"FetcherRequest"}},{"id":209,"name":"options","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":21,"character":2}],"type":{"type":"reference","id":248,"name":"FetcherRequest"}},{"id":206,"name":"patch","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":18,"character":2}],"type":{"type":"reference","id":248,"name":"FetcherRequest"}},{"id":204,"name":"post","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":16,"character":2}],"type":{"type":"reference","id":248,"name":"FetcherRequest"}},{"id":205,"name":"put","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":17,"character":2}],"type":{"type":"reference","id":248,"name":"FetcherRequest"}},{"id":210,"name":"extends","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":41,"character":2}],"signatures":[{"id":211,"name":"extends","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Create a new Fetcher instance with the same configuration"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The new Fetcher instance"}]}]},"parameters":[{"id":212,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The path to extend the baseURL with"}]},"type":{"type":"intrinsic","name":"string"}},{"id":213,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options to extend the current options with"}]},"type":{"type":"reference","id":239,"name":"FetcherOptions"}}],"type":{"type":"reference","id":196,"name":"Fetcher"}}]},{"id":214,"name":"request","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":53,"character":8}],"signatures":[{"id":215,"name":"request","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Make a request to the API using the Fetcher instance configuration"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The response data"}]}]},"typeParameter":[{"id":216,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":217,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The path to make the request to"}]},"type":{"type":"intrinsic","name":"string"}},{"id":218,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options to use for the request"}]},"type":{"type":"reference","id":244,"name":"FetcherRequestOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":216,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[197]},{"title":"Properties","children":[207,203,208,209,206,204,205]},{"title":"Methods","children":[210,214]}],"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":11,"character":13}],"permalink":"/api/fetcher/class/Fetcher","nextId":179},{"id":192,"name":"fetcher","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher.ts","line":84,"character":22}],"signatures":[{"id":193,"name":"fetcher","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Make a request to the API using the Fetcher instance configuration"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The response data"}]}]},"typeParameter":[{"id":194,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":195,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The arguments to pass to fetch"}]},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"input","isOptional":false,"element":{"type":"union","types":[{"type":"reference","name":"RequestInfo","qualifiedName":"RequestInfo","package":"typescript"},{"type":"reference","name":"URL","qualifiedName":"URL","package":"typescript"}]}},{"type":"named-tuple-member","name":"init","isOptional":true,"element":{"type":"reference","name":"RequestInit","qualifiedName":"RequestInit","package":"typescript"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":194,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}],"permalink":"/api/fetcher/function/fetcher","previousId":230,"nextId":247},{"id":179,"name":"FetcherError","kind":128,"kindString":"Class","flags":{},"children":[{"id":180,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":5,"character":2}],"signatures":[{"id":181,"name":"new FetcherError","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":182,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":183,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":184,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":187,"name":"data","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":12,"character":4}],"type":{"type":"reference","id":182,"name":"T"}},{"id":185,"name":"message","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":186,"name":"response","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":11,"character":4}],"type":{"type":"reference","name":"Response","qualifiedName":"Response","package":"typescript"}}],"groups":[{"title":"Properties","children":[187,185,186]}],"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":9,"character":5}]}}}],"type":{"type":"reference","id":179,"typeArguments":[{"type":"reference","id":182,"name":"T"}],"name":"FetcherError"},"overwrites":{"type":"reference","name":"Error.constructor"}}],"overwrites":{"type":"reference","name":"Error.constructor"}},{"id":189,"name":"data","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":3,"character":2}],"type":{"type":"reference","id":182,"name":"T"}},{"id":188,"name":"response","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":2,"character":2}],"type":{"type":"reference","name":"Response","qualifiedName":"Response","package":"typescript"}}],"groups":[{"title":"Constructors","children":[180]},{"title":"Properties","children":[189,188]}],"sources":[{"fileName":"packages/fetcher/src/fetcher-error.ts","line":1,"character":13}],"typeParameters":[{"id":190,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","name":"Error","qualifiedName":"Error","package":"typescript"}],"permalink":"/api/fetcher/class/FetcherError","previousId":196,"nextId":234},{"id":234,"name":"combineHeaders","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/fetcher/src/helpers.ts","line":8,"character":16}],"signatures":[{"id":235,"name":"combineHeaders","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":236,"name":"sources","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"HeadersInit","qualifiedName":"HeadersInit","package":"typescript"}}}],"type":{"type":"reference","name":"Headers","qualifiedName":"Headers","package":"typescript"}}],"permalink":"/api/fetcher/function/combineHeaders","previousId":179,"nextId":230},{"id":230,"name":"combineURLs","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/fetcher/src/helpers.ts","line":2,"character":16}],"signatures":[{"id":231,"name":"combineURLs","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":232,"name":"baseURL","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":233,"name":"path","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/fetcher/function/combineURLs","previousId":234,"nextId":192},{"id":247,"name":"FetcherMethods","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":18,"character":12}],"type":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"query","queryType":{"type":"reference","id":177,"name":"METHODS"}}},"permalink":"/api/fetcher#FetcherMethods","previousId":192,"nextId":239},{"id":239,"name":"FetcherOptions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":3,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"RequestInit","qualifiedName":"RequestInit","package":"typescript"},{"type":"union","types":[{"type":"literal","value":"headers"},{"type":"literal","value":"credentials"},{"type":"literal","value":"mode"},{"type":"literal","value":"cache"},{"type":"literal","value":"redirect"},{"type":"literal","value":"referrerPolicy"}]}],"name":"Pick","qualifiedName":"Pick","package":"typescript"},"permalink":"/api/fetcher#FetcherOptions","previousId":247,"nextId":240},{"id":240,"name":"FetcherParams","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":8,"character":12}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Record","qualifiedName":"Record","package":"typescript"},"permalink":"/api/fetcher#FetcherParams","previousId":239,"nextId":248},{"id":248,"name":"FetcherRequest","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":20,"character":12}],"type":{"type":"reflection","declaration":{"id":249,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":20,"character":29}],"signatures":[{"id":250,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":253,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":251,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":252,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":241,"name":"FetcherRequestInit"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":253,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}},"permalink":"/api/fetcher#FetcherRequest","previousId":240,"nextId":241},{"id":241,"name":"FetcherRequestInit","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":10,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"RequestInit","qualifiedName":"RequestInit","package":"typescript"},{"type":"literal","value":"method"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"},{"type":"reflection","declaration":{"id":242,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":243,"name":"params","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":11,"character":2}],"type":{"type":"reference","id":240,"name":"FetcherParams"}}],"groups":[{"title":"Properties","children":[243]}],"sources":[{"fileName":"packages/fetcher/src/types.ts","line":10,"character":63}]}}]},"permalink":"/api/fetcher#FetcherRequestInit","previousId":248,"nextId":244},{"id":244,"name":"FetcherRequestOptions","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":14,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","id":241,"name":"FetcherRequestInit"},{"type":"reflection","declaration":{"id":245,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":246,"name":"method","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/fetcher/src/types.ts","line":15,"character":2}],"type":{"type":"reference","id":247,"name":"FetcherMethods"}}],"groups":[{"title":"Properties","children":[246]}],"sources":[{"fileName":"packages/fetcher/src/types.ts","line":14,"character":57}]}}]},"permalink":"/api/fetcher#FetcherRequestOptions","previousId":241,"nextId":177}],"groups":[{"title":"Classes","children":[196,179]},{"title":"Functions","children":[234,230,192]},{"title":"Type Aliases","children":[247,239,240,248,241,244]},{"title":"Variables","children":[177]}],"sources":[{"fileName":"packages/fetcher/src/index.ts","line":1,"character":0}],"permalink":"/api/fetcher"},"urlSlug":"fetcher"}],"packageName":"@zero-dependency/fetcher","packageVersion":"1.2.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":24,"name":"@zero-dependency/react","kind":2,"kindString":"Module","flags":{},"children":[{"id":766,"name":"ProviderTree","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":22,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/ProviderTree.ts#L22"}],"target":2,"permalink":"/api/react#ProviderTree"},{"id":767,"name":"createProvider","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/createProvider.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/createProvider.ts#L10"}],"target":17,"permalink":"/api/react#createProvider"},{"id":762,"name":"namedLazy","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/namedLazy.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/namedLazy.ts#L10"}],"target":26,"permalink":"/api/react#namedLazy"},{"id":768,"name":"useContextProvider","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useContextProvider.ts","line":8,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useContextProvider.ts#L8"}],"target":50,"permalink":"/api/react#useContextProvider"},{"id":765,"name":"useCookie","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":25,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useCookie.ts#L25"}],"target":56,"permalink":"/api/react#useCookie"},{"id":771,"name":"useDidUpdate","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useDidUpdate.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useDidUpdate.ts#L9"}],"target":75,"permalink":"/api/react#useDidUpdate"},{"id":769,"name":"useEvent","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useEvent.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useEvent.ts#L9"}],"target":80,"permalink":"/api/react#useEvent"},{"id":770,"name":"useForceUpdate","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useForceUpdate.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useForceUpdate.ts#L9"}],"target":88,"permalink":"/api/react#useForceUpdate"},{"id":778,"name":"useInterval","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useInterval.ts","line":3,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useInterval.ts#L3"}],"target":91,"permalink":"/api/react#useInterval"},{"id":776,"name":"useIsomorphicEffect","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useIsomorphicEffect.ts","line":7,"character":13,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useIsomorphicEffect.ts#L7"}],"target":98,"permalink":"/api/react#useIsomorphicEffect"},{"id":774,"name":"useLatest","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useLatest.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useLatest.ts#L9"}],"target":103,"permalink":"/api/react#useLatest"},{"id":763,"name":"useLocalStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useLocalStorage.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useLocalStorage.ts#L10"}],"target":108,"permalink":"/api/react#useLocalStorage"},{"id":772,"name":"useLogger","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useLogger.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useLogger.ts#L10"}],"target":120,"permalink":"/api/react#useLogger"},{"id":779,"name":"useMergeRefs","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useMergeRefs.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useMergeRefs.ts#L9"}],"target":125,"permalink":"/api/react#useMergeRefs"},{"id":775,"name":"usePrevious","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/usePrevious.ts","line":7,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/usePrevious.ts#L7"}],"target":133,"permalink":"/api/react#usePrevious"},{"id":764,"name":"useSessionStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useSessionStorage.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useSessionStorage.ts#L10"}],"target":138,"permalink":"/api/react#useSessionStorage"},{"id":773,"name":"useSetState","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useSetState.ts","line":19,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useSetState.ts#L19"}],"target":150,"permalink":"/api/react#useSetState"},{"id":777,"name":"useToggle","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/react/src/useToggle.ts","line":3,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useToggle.ts#L3"}],"target":158,"permalink":"/api/react#useToggle"},{"id":2,"name":"ProviderTree","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":22,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/ProviderTree.ts#L22"}],"signatures":[{"id":3,"name":"ProviderTree","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A component that allows you to create a tree of providers"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```jsx\\n<ProviderTree\\n  providers={(wrapper) => [\\n    wrapper(StrictMode),\\n    wrapper(MyProvider, { value: \'hello\' }),\\n    wrapper(MyOtherProvider, { value: \'world\' })\\n  ]}\\n>\\n  <App />\\n</ProviderTree>\\n```"}]}]},"parameters":[{"id":4,"name":"props","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":15,"name":"children","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":29,"character":2,"url":"https://github.com/zero-dependency/react/blob/047049d/src/ProviderTree.ts#L29"}],"type":{"type":"reference","name":"ReactNode","qualifiedName":"React.ReactNode","package":"@types/react"}},{"id":6,"name":"providers","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":23,"character":2,"url":"https://github.com/zero-dependency/react/blob/047049d/src/ProviderTree.ts#L23"}],"type":{"type":"reflection","declaration":{"id":7,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":23,"character":13,"url":"https://github.com/zero-dependency/react/blob/047049d/src/ProviderTree.ts#L23"}],"signatures":[{"id":8,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":9,"name":"wrapper","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":10,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":24,"character":13,"url":"https://github.com/zero-dependency/react/blob/047049d/src/ProviderTree.ts#L24"}],"signatures":[{"id":11,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":12,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","id":12,"name":"T"}],"name":"FunctionComponent","qualifiedName":"React.FunctionComponent","package":"@types/react"}}],"parameters":[{"id":13,"name":"component","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":12,"name":"T"}},{"id":14,"name":"props","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":12,"name":"T"}],"name":"Props"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":12,"name":"T"}],"name":"Provider"}}]}}}],"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","name":"Component"}],"name":"Provider"}}}]}}}],"groups":[{"title":"Properties","children":[15,6]}],"sources":[{"fileName":"packages/react/src/ProviderTree.ts","line":22,"character":36,"url":"https://github.com/zero-dependency/react/blob/047049d/src/ProviderTree.ts#L22"}]}}}],"type":{"type":"reference","name":"Element","qualifiedName":"global.JSX.Element","package":"@types/react"}}],"permalink":"/api/react/function/ProviderTree","nextId":17},{"id":17,"name":"createProvider","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/createProvider.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/createProvider.ts#L10"}],"signatures":[{"id":18,"name":"createProvider","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a context provider, hook, and consumer"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A tuple of the hook, provider, and consumer"}]}]},"typeParameter":[{"id":19,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":20,"name":"displayName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the context. Used for error messages"}]},"type":{"type":"intrinsic","name":"string"}},{"id":21,"name":"defaultValue","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The default value of the context"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":19,"name":"T"}]},"defaultValue":"null"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"hook","isOptional":false,"element":{"type":"reflection","declaration":{"id":22,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/createProvider.ts","line":14,"character":8,"url":"https://github.com/zero-dependency/react/blob/047049d/src/createProvider.ts#L14"}],"signatures":[{"id":23,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":19,"name":"T"}}]}}},{"type":"named-tuple-member","name":"provider","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":19,"name":"T"},{"type":"literal","value":null}]}],"name":"React.Provider","qualifiedName":"React.Provider","package":"@types/react"}},{"type":"named-tuple-member","name":"consumer","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":19,"name":"T"},{"type":"literal","value":null}]}],"name":"React.Consumer","qualifiedName":"React.Consumer","package":"@types/react"}}]}}}],"permalink":"/api/react/function/createProvider","previousId":2,"nextId":26},{"id":26,"name":"namedLazy","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/namedLazy.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/namedLazy.ts#L10"}],"signatures":[{"id":27,"name":"namedLazy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A wrapper around React.lazy that allows you to specify a named export to resolve to"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\\nnamedLazy(() => import(\'./MyComponent\'), \'MyComponent\')\\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"a React.LazyExoticComponent that will resolve to the named export"}]}]},"typeParameter":[{"id":28,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":29,"name":"loader","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"a function that returns a promise that resolves to an object"}]},"type":{"type":"reflection","declaration":{"id":30,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/namedLazy.ts","line":11,"character":10,"url":"https://github.com/zero-dependency/react/blob/047049d/src/namedLazy.ts#L11"}],"signatures":[{"id":31,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":28,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}},{"id":32,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the name of the named export to resolve to"}]},"type":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":28,"name":"T"}}}],"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":28,"name":"T"}},"objectType":{"type":"reference","id":28,"name":"T"}}],"name":"React.LazyExoticComponent","qualifiedName":"React.LazyExoticComponent","package":"@types/react"}}],"permalink":"/api/react/function/namedLazy","previousId":17,"nextId":50},{"id":36,"name":"CallbackFn","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":2,"character":12,"url":"https://github.com/zero-dependency/react/blob/047049d/src/types.ts#L2"}],"typeParameters":[{"id":43,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reflection","declaration":{"id":40,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":2,"character":33,"url":"https://github.com/zero-dependency/react/blob/047049d/src/types.ts#L2"}],"signatures":[{"id":41,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":42,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reflection","declaration":{"id":37,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":2,"character":61,"url":"https://github.com/zero-dependency/react/blob/047049d/src/types.ts#L2"}],"signatures":[{"id":38,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":39,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":43,"name":"T"}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":43,"name":"T"}],"name":"ReturnType","qualifiedName":"ReturnType","package":"typescript"}}]}},"permalink":"/api/react#CallbackFn","previousId":164,"nextId":34},{"id":34,"name":"KeyOf","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":1,"character":12,"url":"https://github.com/zero-dependency/react/blob/047049d/src/types.ts#L1"}],"typeParameters":[{"id":35,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","typeArguments":[{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":35,"name":"T"}},{"type":"intrinsic","name":"string"}],"name":"Extract","qualifiedName":"Extract","package":"typescript"},"permalink":"/api/react#KeyOf","previousId":36,"nextId":44},{"id":44,"name":"SetStateActionPartial","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":5,"character":12,"url":"https://github.com/zero-dependency/react/blob/047049d/src/types.ts#L5"}],"typeParameters":[{"id":48,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","id":48,"name":"T"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"},{"type":"reflection","declaration":{"id":45,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/types.ts","line":5,"character":53,"url":"https://github.com/zero-dependency/react/blob/047049d/src/types.ts#L5"}],"signatures":[{"id":46,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":47,"name":"state","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":48,"name":"T"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":48,"name":"T"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}}]}}]},"permalink":"/api/react#SetStateActionPartial","previousId":34},{"id":50,"name":"useContextProvider","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useContextProvider.ts","line":8,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useContextProvider.ts#L8"}],"signatures":[{"id":51,"name":"useContextProvider","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A hook that throws an error if it is used outside of a context provider"}]},"typeParameter":[{"id":52,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":53,"name":"displayName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the context provider. Used for error messages"}]},"type":{"type":"intrinsic","name":"string"}},{"id":54,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The context to use"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":52,"name":"T"}],"name":"Context","qualifiedName":"React.Context","package":"@types/react"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":52,"name":"T"}],"name":"NonNullable","qualifiedName":"NonNullable","package":"typescript"}}],"permalink":"/api/react/function/useContextProvider","previousId":26,"nextId":56},{"id":56,"name":"useCookie","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":25,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useCookie.ts#L25"}],"signatures":[{"id":57,"name":"useCookie","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"React hook for managing cookies"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```jsx\\nfunction App() {\\n  const [cookies, setCookie, removeCookie] = useCookie({\\n    initialValue: {\\n      theme: \'dark\'\\n    }\\n  })\\n\\n  return <h1>Theme: {cookies.theme}</h1>\\n}\\n```"}]}]},"typeParameter":[{"id":58,"name":"CookieValues","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":59,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Cookie options"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"values","isOptional":false,"element":{"type":"reference","id":58,"name":"CookieValues"}},{"type":"named-tuple-member","name":"setValue","isOptional":false,"element":{"type":"reflection","declaration":{"id":60,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":29,"character":12,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useCookie.ts#L29"}],"signatures":[{"id":61,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":64,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":34,"typeArguments":[{"type":"reference","id":58,"name":"CookieValues"}],"name":"KeyOf"}}],"parameters":[{"id":62,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":64,"name":"Name"}},{"id":63,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":64,"name":"Name"},"objectType":{"type":"reference","id":58,"name":"CookieValues"}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"type":"named-tuple-member","name":"removeValue","isOptional":false,"element":{"type":"reflection","declaration":{"id":65,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":33,"character":15,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useCookie.ts#L33"}],"signatures":[{"id":66,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":69,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":34,"typeArguments":[{"type":"reference","id":58,"name":"CookieValues"}],"name":"KeyOf"}}],"parameters":[{"id":67,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":69,"name":"Name"}},{"id":68,"name":"attributes","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"CookieDomainAttributes"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"type":"named-tuple-member","name":"getValue","isOptional":false,"element":{"type":"reflection","declaration":{"id":70,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useCookie.ts","line":37,"character":12,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useCookie.ts#L37"}],"signatures":[{"id":71,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":73,"name":"Name","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":34,"typeArguments":[{"type":"reference","id":58,"name":"CookieValues"}],"name":"KeyOf"}}],"parameters":[{"id":72,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":73,"name":"Name"}}],"type":{"type":"union","types":[{"type":"indexedAccess","indexType":{"type":"reference","id":73,"name":"Name"},"objectType":{"type":"reference","id":58,"name":"CookieValues"}},{"type":"literal","value":null}]}}]}}}]}}}],"permalink":"/api/react/function/useCookie","previousId":50,"nextId":75},{"id":75,"name":"useDidUpdate","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useDidUpdate.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useDidUpdate.ts#L9"}],"signatures":[{"id":76,"name":"useDidUpdate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A hook that runs a callback after the first render"}]},"parameters":[{"id":77,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The callback to run after the first render"}]},"type":{"type":"reference","name":"EffectCallback","qualifiedName":"React.EffectCallback","package":"@types/react"}},{"id":78,"name":"deps","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The dependencies to watch for changes"}]},"type":{"type":"reference","name":"DependencyList","qualifiedName":"React.DependencyList","package":"@types/react"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/react/function/useDidUpdate","previousId":56,"nextId":80},{"id":80,"name":"useEvent","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useEvent.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useEvent.ts#L9"}],"signatures":[{"id":81,"name":"useEvent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Allow to access a fresh closures in the function but returns stable reference during rerenders"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback"},{"kind":"text","text":"\\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://github.com/reactjs/rfcs/pull/220#issuecomment-1259938816"},{"kind":"text","text":"\\n"}]}]},"typeParameter":[{"id":85,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reflection","declaration":{"id":82,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useEvent.ts","line":9,"character":35,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useEvent.ts#L9"}],"signatures":[{"id":83,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":84,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"parameters":[{"id":86,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":85,"name":"T"}}],"type":{"type":"reference","id":36,"typeArguments":[{"type":"reference","id":85,"name":"T"}],"name":"CallbackFn"}}],"permalink":"/api/react/function/useEvent","previousId":75,"nextId":88},{"id":88,"name":"useForceUpdate","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useForceUpdate.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useForceUpdate.ts#L9"}],"signatures":[{"id":89,"name":"useForceUpdate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Forces a component to re-render"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A function that can be called to force a component to re-render"}]}]},"type":{"type":"reference","name":"DispatchWithoutAction","qualifiedName":"React.DispatchWithoutAction","package":"@types/react"}}],"permalink":"/api/react/function/useForceUpdate","previousId":80,"nextId":91},{"id":91,"name":"useInterval","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useInterval.ts","line":3,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useInterval.ts#L3"}],"signatures":[{"id":92,"name":"useInterval","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":93,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":94,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useInterval.ts","line":3,"character":38,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useInterval.ts#L3"}],"signatures":[{"id":95,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":96,"name":"ms","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/react/function/useInterval","previousId":88,"nextId":98},{"id":98,"name":"useIsomorphicEffect","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useIsomorphicEffect.ts","line":7,"character":13,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useIsomorphicEffect.ts#L7"}],"signatures":[{"id":99,"name":"useIsomorphicEffect","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"code","text":"`useLayoutEffect`"},{"kind":"text","text":" will show warning if used during ssr, e.g. with Next.js\\n"},{"kind":"code","text":"`useIsomorphicEffect`"},{"kind":"text","text":" removes it by replacing "},{"kind":"code","text":"`useLayoutEffect`"},{"kind":"text","text":" with "},{"kind":"code","text":"`useEffect`"},{"kind":"text","text":" during ssr"}]},"parameters":[{"id":100,"name":"effect","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EffectCallback","qualifiedName":"React.EffectCallback","package":"@types/react"}},{"id":101,"name":"deps","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"DependencyList","qualifiedName":"React.DependencyList","package":"@types/react"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/react/function/useIsomorphicEffect","previousId":91,"nextId":103},{"id":103,"name":"useLatest","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useLatest.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useLatest.ts#L9"}],"signatures":[{"id":104,"name":"useLatest","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"This is mostly useful to get access to the latest value of some props\\nor state inside an asynchronous callback,\\ninstead of that value at the time the callback was created from"}]},"typeParameter":[{"id":105,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":106,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to store in a ref"}]},"type":{"type":"reference","id":105,"name":"T"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":105,"name":"T"}],"name":"MutableRefObject","qualifiedName":"React.MutableRefObject","package":"@types/react"}}],"permalink":"/api/react/function/useLatest","previousId":98,"nextId":108},{"id":108,"name":"useLocalStorage","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useLocalStorage.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useLocalStorage.ts#L10"}],"signatures":[{"id":109,"name":"useLocalStorage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"React hook for managing "},{"kind":"code","text":"`localStorage`"}]},"typeParameter":[{"id":110,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":111,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":112,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":110,"name":"T"}],"name":"ExcludeFunction"}},{"id":113,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"unknown"},{"type":"reflection","declaration":{"id":114,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":15,"character":12,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useWebStorage.ts#L15"}],"signatures":[{"id":115,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":116,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reflection","declaration":{"id":117,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":16,"character":14,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useWebStorage.ts#L16"}],"signatures":[{"id":118,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}]}}}],"permalink":"/api/react/function/useLocalStorage","previousId":103,"nextId":120},{"id":120,"name":"useLogger","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useLogger.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useLogger.ts#L10"}],"signatures":[{"id":121,"name":"useLogger","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A hook that logs when a component mounts and updates"}]},"parameters":[{"id":122,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the component"}]},"type":{"type":"intrinsic","name":"string"}},{"id":123,"name":"deps","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The dependencies to watch for changes"}]},"type":{"type":"reference","name":"DependencyList","qualifiedName":"React.DependencyList","package":"@types/react"}}],"type":{"type":"literal","value":null}}],"permalink":"/api/react/function/useLogger","previousId":108,"nextId":125},{"id":125,"name":"useMergeRefs","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useMergeRefs.ts","line":9,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useMergeRefs.ts#L9"}],"signatures":[{"id":126,"name":"useMergeRefs","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":127,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":128,"name":"refs","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","id":127,"name":"T"}],"name":"Refs"}}}],"type":{"type":"reflection","declaration":{"id":129,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useMergeRefs.ts","line":10,"character":33,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useMergeRefs.ts#L10"}],"signatures":[{"id":130,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":131,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":127,"name":"T"}]}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"permalink":"/api/react/function/useMergeRefs","previousId":120,"nextId":133},{"id":133,"name":"usePrevious","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/usePrevious.ts","line":7,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/usePrevious.ts#L7"}],"signatures":[{"id":134,"name":"usePrevious","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A hook that returns a ref that always contains the previous value"}]},"typeParameter":[{"id":135,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":136,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to store in a ref"}]},"type":{"type":"reference","id":135,"name":"T"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","id":135,"name":"T"}]}}],"permalink":"/api/react/function/usePrevious","previousId":125,"nextId":138},{"id":138,"name":"useSessionStorage","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useSessionStorage.ts","line":10,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useSessionStorage.ts#L10"}],"signatures":[{"id":139,"name":"useSessionStorage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"React hook for managing "},{"kind":"code","text":"`sessionStorage`"}]},"typeParameter":[{"id":140,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":141,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":142,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":140,"name":"T"}],"name":"ExcludeFunction"}},{"id":143,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"intrinsic","name":"unknown"},{"type":"reflection","declaration":{"id":144,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":15,"character":12,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useWebStorage.ts#L15"}],"signatures":[{"id":145,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":146,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}},{"type":"reflection","declaration":{"id":147,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":16,"character":14,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useWebStorage.ts#L16"}],"signatures":[{"id":148,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}]}}}],"permalink":"/api/react/function/useSessionStorage","previousId":133,"nextId":150},{"id":150,"name":"useSetState","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useSetState.ts","line":19,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useSetState.ts#L19"}],"signatures":[{"id":151,"name":"useSetState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```jsx\\nconst [state, setState] = useSetState({ count: 1, name: \'John\' })\\n\\nfunction increment() {\\n  setState((state) => ({ count: state.count + 1 }))\\n}\\n\\nfunction setName(name: string) {\\n  setState({ name })\\n}\\n```"}]}]},"typeParameter":[{"id":152,"name":"State","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":153,"name":"initialState","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Initial state"}]},"type":{"type":"reference","id":152,"name":"State"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"state","isOptional":false,"element":{"type":"reference","id":152,"name":"State"}},{"type":"named-tuple-member","name":"setState","isOptional":false,"element":{"type":"reflection","declaration":{"id":154,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useSetState.ts","line":23,"character":12,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useSetState.ts#L23"}],"signatures":[{"id":155,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":156,"name":"setStateAction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":44,"typeArguments":[{"type":"reference","id":152,"name":"State"}],"name":"SetStateActionPartial"}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}}],"permalink":"/api/react/function/useSetState","previousId":138,"nextId":158},{"id":158,"name":"useToggle","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useToggle.ts","line":3,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useToggle.ts#L3"}],"signatures":[{"id":159,"name":"useToggle","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":160,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"value","isOptional":false,"element":{"type":"intrinsic","name":"boolean"}},{"type":"named-tuple-member","name":"toggle","isOptional":false,"element":{"type":"reflection","declaration":{"id":161,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useToggle.ts","line":5,"character":37,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useToggle.ts#L5"}],"signatures":[{"id":162,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}}}],"permalink":"/api/react/function/useToggle","previousId":150,"nextId":164},{"id":164,"name":"useWebStorage","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":8,"character":16,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useWebStorage.ts#L8"}],"signatures":[{"id":165,"name":"useWebStorage","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":166,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":167,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":168,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":166,"name":"T"}],"name":"ExcludeFunction"}},{"id":169,"name":"storage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Storage","qualifiedName":"Storage","package":"typescript"}},{"id":170,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"value","isOptional":false,"element":{"type":"reference","id":166,"name":"T"}},{"type":"named-tuple-member","name":"setValue","isOptional":false,"element":{"type":"reflection","declaration":{"id":171,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":15,"character":12,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useWebStorage.ts#L15"}],"signatures":[{"id":172,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":173,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":166,"name":"T"}],"name":"React.SetStateAction","qualifiedName":"React.SetStateAction","package":"@types/react"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"type":"named-tuple-member","name":"resetValue","isOptional":false,"element":{"type":"reflection","declaration":{"id":174,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/react/src/useWebStorage.ts","line":16,"character":14,"url":"https://github.com/zero-dependency/react/blob/047049d/src/useWebStorage.ts#L16"}],"signatures":[{"id":175,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}}}],"permalink":"/api/react/function/useWebStorage","previousId":158,"nextId":36}],"groups":[{"title":"Functions","children":[2,17,26,50,56,75,80,88,91,98,103,108,120,125,133,138,150,158,164]},{"title":"Type Aliases","children":[36,34,44]}],"sources":[{"fileName":"packages/react/src/index.ts","line":1,"character":0,"url":"https://github.com/zero-dependency/react/blob/047049d/src/index.ts#L1"}],"permalink":"/api/react"},"urlSlug":"react"}],"packageName":"@zero-dependency/react","packageVersion":"0.17.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":484,"name":"@zero-dependency/storage","kind":2,"kindString":"Module","flags":{},"children":[{"id":829,"name":"LocalStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/storage/src/local-storage.ts","line":4,"character":13}],"target":486,"permalink":"/api/storage#LocalStorage"},{"id":830,"name":"SessionStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/storage/src/session-storage.ts","line":4,"character":13}],"target":516,"permalink":"/api/storage#SessionStorage"},{"id":828,"name":"StorageOptions","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/storage/src/index.ts","line":4,"character":14}],"target":548,"permalink":"/api/storage#StorageOptions"},{"id":831,"name":"WebStorage","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":3,"character":13}],"target":563,"permalink":"/api/storage#WebStorage"},{"id":486,"name":"LocalStorage","kind":128,"kindString":"Class","flags":{},"children":[{"id":487,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/storage/src/local-storage.ts","line":5,"character":2}],"signatures":[{"id":488,"name":"new LocalStorage","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":489,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":490,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":491,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":546,"typeArguments":[{"type":"reference","id":489,"name":"T"}],"name":"ExcludeFunction"}},{"id":492,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":548,"typeArguments":[{"type":"reference","id":489,"name":"T"}],"name":"StorageOptions"}}],"type":{"type":"reference","id":486,"typeArguments":[{"type":"reference","id":489,"name":"T"}],"name":"LocalStorage"},"overwrites":{"type":"reference","id":565,"name":"WebStorage.constructor"}}],"overwrites":{"type":"reference","id":564,"name":"WebStorage.constructor"}},{"id":498,"name":"initialValue","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":36,"character":6}],"getSignature":{"id":499,"name":"initialValue","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get initial value of storage"}]},"type":{"type":"reference","id":566,"name":"T"},"inheritedFrom":{"type":"reference","name":"WebStorage.initialValue"}},"inheritedFrom":{"type":"reference","id":576,"name":"WebStorage.initialValue"}},{"id":500,"name":"value","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":43,"character":6}],"getSignature":{"id":501,"name":"value","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Read value from storage or return initial value if value does not exist in storage"}]},"type":{"type":"reference","id":566,"name":"T"},"inheritedFrom":{"type":"reference","name":"WebStorage.value"}},"inheritedFrom":{"type":"reference","id":578,"name":"WebStorage.value"}},{"id":510,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":78,"character":2}],"signatures":[{"id":511,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the value exists in storage"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"true if the value exists in storage"}]}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":589,"name":"WebStorage.has"}}],"inheritedFrom":{"type":"reference","id":588,"name":"WebStorage.has"}},{"id":512,"name":"reset","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":85,"character":2}],"signatures":[{"id":513,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Reset storage to initial value"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":591,"name":"WebStorage.reset"}}],"inheritedFrom":{"type":"reference","id":590,"name":"WebStorage.reset"}},{"id":502,"name":"write","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":57,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":59,"character":2}],"signatures":[{"id":503,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Write value to storage and return the value written"}]},"parameters":[{"id":504,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Value to write to storage"}]},"type":{"type":"reference","id":489,"name":"T"}}],"type":{"type":"reference","id":489,"name":"T"},"inheritedFrom":{"type":"reference","id":581,"name":"WebStorage.write"}},{"id":505,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":506,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":507,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":15}],"signatures":[{"id":508,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":509,"name":"prevValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":489,"name":"T"}}],"type":{"type":"reference","id":489,"name":"T"}}]}}}],"type":{"type":"reference","id":489,"name":"T"},"inheritedFrom":{"type":"reference","id":583,"name":"WebStorage.write"}}],"inheritedFrom":{"type":"reference","id":580,"name":"WebStorage.write"}}],"groups":[{"title":"Constructors","children":[487]},{"title":"Accessors","children":[498,500]},{"title":"Methods","children":[510,512,502]}],"sources":[{"fileName":"packages/storage/src/local-storage.ts","line":4,"character":13}],"typeParameters":[{"id":514,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","id":563,"typeArguments":[{"type":"reference","id":489,"name":"T"}],"name":"WebStorage"}],"permalink":"/api/storage/class/LocalStorage","nextId":516},{"id":516,"name":"SessionStorage","kind":128,"kindString":"Class","flags":{},"children":[{"id":517,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/storage/src/session-storage.ts","line":5,"character":2}],"signatures":[{"id":518,"name":"new SessionStorage","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":519,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":520,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":521,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":546,"typeArguments":[{"type":"reference","id":519,"name":"T"}],"name":"ExcludeFunction"}},{"id":522,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":548,"typeArguments":[{"type":"reference","id":519,"name":"T"}],"name":"StorageOptions"}}],"type":{"type":"reference","id":516,"typeArguments":[{"type":"reference","id":519,"name":"T"}],"name":"SessionStorage"},"overwrites":{"type":"reference","id":565,"name":"WebStorage.constructor"}}],"overwrites":{"type":"reference","id":564,"name":"WebStorage.constructor"}},{"id":528,"name":"initialValue","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":36,"character":6}],"getSignature":{"id":529,"name":"initialValue","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get initial value of storage"}]},"type":{"type":"reference","id":566,"name":"T"},"inheritedFrom":{"type":"reference","name":"WebStorage.initialValue"}},"inheritedFrom":{"type":"reference","id":576,"name":"WebStorage.initialValue"}},{"id":530,"name":"value","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":43,"character":6}],"getSignature":{"id":531,"name":"value","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Read value from storage or return initial value if value does not exist in storage"}]},"type":{"type":"reference","id":566,"name":"T"},"inheritedFrom":{"type":"reference","name":"WebStorage.value"}},"inheritedFrom":{"type":"reference","id":578,"name":"WebStorage.value"}},{"id":540,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":78,"character":2}],"signatures":[{"id":541,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the value exists in storage"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"true if the value exists in storage"}]}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":589,"name":"WebStorage.has"}}],"inheritedFrom":{"type":"reference","id":588,"name":"WebStorage.has"}},{"id":542,"name":"reset","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":85,"character":2}],"signatures":[{"id":543,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Reset storage to initial value"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":591,"name":"WebStorage.reset"}}],"inheritedFrom":{"type":"reference","id":590,"name":"WebStorage.reset"}},{"id":532,"name":"write","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":57,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":59,"character":2}],"signatures":[{"id":533,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Write value to storage and return the value written"}]},"parameters":[{"id":534,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Value to write to storage"}]},"type":{"type":"reference","id":519,"name":"T"}}],"type":{"type":"reference","id":519,"name":"T"},"inheritedFrom":{"type":"reference","id":581,"name":"WebStorage.write"}},{"id":535,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":536,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":537,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":15}],"signatures":[{"id":538,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":539,"name":"prevValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":519,"name":"T"}}],"type":{"type":"reference","id":519,"name":"T"}}]}}}],"type":{"type":"reference","id":519,"name":"T"},"inheritedFrom":{"type":"reference","id":583,"name":"WebStorage.write"}}],"inheritedFrom":{"type":"reference","id":580,"name":"WebStorage.write"}}],"groups":[{"title":"Constructors","children":[517]},{"title":"Accessors","children":[528,530]},{"title":"Methods","children":[540,542,532]}],"sources":[{"fileName":"packages/storage/src/session-storage.ts","line":4,"character":13}],"typeParameters":[{"id":544,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","id":563,"typeArguments":[{"type":"reference","id":519,"name":"T"}],"name":"WebStorage"}],"permalink":"/api/storage/class/SessionStorage","previousId":486,"nextId":563},{"id":548,"name":"StorageOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":550,"name":"decode","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":5,"character":2}],"type":{"type":"reference","id":557,"typeArguments":[{"type":"reference","id":551,"name":"T"}],"name":"Decode"}},{"id":549,"name":"encode","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":4,"character":2}],"type":{"type":"reference","id":552,"typeArguments":[{"type":"reference","id":551,"name":"T"}],"name":"Encode"}}],"groups":[{"title":"Properties","children":[550,549]}],"sources":[{"fileName":"packages/storage/src/types.ts","line":3,"character":17}],"typeParameters":[{"id":551,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"permalink":"/api/storage/interface/StorageOptions","previousId":563,"nextId":557},{"id":557,"name":"Decode","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":9,"character":12}],"typeParameters":[{"id":561,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":558,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":9,"character":24}],"signatures":[{"id":559,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":560,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":561,"name":"T"}}]}},"permalink":"/api/storage#Decode","previousId":548,"nextId":552},{"id":552,"name":"Encode","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":8,"character":12}],"typeParameters":[{"id":556,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":553,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":8,"character":24}],"signatures":[{"id":554,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":555,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":556,"name":"T"}}],"type":{"type":"intrinsic","name":"string"}}]}},"permalink":"/api/storage#Encode","previousId":557,"nextId":546},{"id":546,"name":"ExcludeFunction","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/storage/src/types.ts","line":1,"character":12}],"typeParameters":[{"id":547,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","id":547,"name":"T"},"extendsType":{"type":"reference","name":"Function","qualifiedName":"Function","package":"typescript"},"trueType":{"type":"intrinsic","name":"never"},"falseType":{"type":"reference","id":547,"name":"T"}},"permalink":"/api/storage#ExcludeFunction","previousId":552},{"id":563,"name":"WebStorage","kind":128,"kindString":"Class","flags":{},"children":[{"id":564,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":10,"character":2}],"signatures":[{"id":565,"name":"new WebStorage","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":566,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":567,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":568,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":566,"name":"T"}},{"id":569,"name":"storage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Storage","qualifiedName":"Storage","package":"typescript"}},{"id":570,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":548,"typeArguments":[{"type":"reference","id":566,"name":"T"}],"name":"StorageOptions"}}],"type":{"type":"reference","id":563,"typeArguments":[{"type":"reference","id":566,"name":"T"}],"name":"WebStorage"}}]},{"id":576,"name":"initialValue","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":36,"character":6}],"getSignature":{"id":577,"name":"initialValue","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get initial value of storage"}]},"type":{"type":"reference","id":566,"name":"T"}}},{"id":578,"name":"value","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":43,"character":6}],"getSignature":{"id":579,"name":"value","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Read value from storage or return initial value if value does not exist in storage"}]},"type":{"type":"reference","id":566,"name":"T"}}},{"id":588,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":78,"character":2}],"signatures":[{"id":589,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Check if the value exists in storage"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"true if the value exists in storage"}]}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":590,"name":"reset","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":85,"character":2}],"signatures":[{"id":591,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Reset storage to initial value"}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":580,"name":"write","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":57,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":2},{"fileName":"packages/storage/src/web-storage.ts","line":59,"character":2}],"signatures":[{"id":581,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Write value to storage and return the value written"}]},"parameters":[{"id":582,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Value to write to storage"}]},"type":{"type":"reference","id":566,"name":"T"}}],"type":{"type":"reference","id":566,"name":"T"}},{"id":583,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":584,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":585,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":58,"character":15}],"signatures":[{"id":586,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":587,"name":"prevValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":566,"name":"T"}}],"type":{"type":"reference","id":566,"name":"T"}}]}}}],"type":{"type":"reference","id":566,"name":"T"}}]}],"groups":[{"title":"Constructors","children":[564]},{"title":"Accessors","children":[576,578]},{"title":"Methods","children":[588,590,580]}],"sources":[{"fileName":"packages/storage/src/web-storage.ts","line":3,"character":13}],"typeParameters":[{"id":592,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedBy":[{"type":"reference","id":486,"name":"LocalStorage"},{"type":"reference","id":516,"name":"SessionStorage"}],"permalink":"/api/storage/class/WebStorage","previousId":516,"nextId":548}],"groups":[{"title":"Classes","children":[486,516,563]},{"title":"Interfaces","children":[548]},{"title":"Type Aliases","children":[557,552,546]}],"sources":[{"fileName":"packages/storage/src/index.ts","line":1,"character":0}],"permalink":"/api/storage"},"urlSlug":"storage"}],"packageName":"@zero-dependency/storage","packageVersion":"1.3.1"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":318,"name":"@zero-dependency/utils","kind":2,"kindString":"Module","flags":{},"children":[{"id":802,"name":"Entries","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":3,"character":12}],"target":368,"permalink":"/api/utils#Entries"},{"id":800,"name":"Keys","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":1,"character":12}],"target":364,"permalink":"/api/utils#Keys"},{"id":803,"name":"Plain","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":4,"character":12}],"target":370,"permalink":"/api/utils#Plain"},{"id":794,"name":"Rgb","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":4,"character":17}],"target":314,"permalink":"/api/utils#Rgb"},{"id":801,"name":"Values","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":2,"character":12}],"target":366,"permalink":"/api/utils#Values"},{"id":805,"name":"addZero","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":18,"character":16}],"target":335,"permalink":"/api/utils#addZero"},{"id":809,"name":"capitalize","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":27,"character":16}],"target":391,"permalink":"/api/utils#capitalize"},{"id":807,"name":"clamp","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":45,"character":16}],"target":342,"permalink":"/api/utils#clamp"},{"id":796,"name":"debounce","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/debounce.ts","line":11,"character":16}],"target":255,"permalink":"/api/utils#debounce"},{"id":797,"name":"entries","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":20,"character":16}],"target":348,"permalink":"/api/utils#entries"},{"id":808,"name":"generateChars","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":9,"character":16}],"target":387,"permalink":"/api/utils#generateChars"},{"id":791,"name":"hexToRgb","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":18,"character":16}],"target":305,"permalink":"/api/utils#hexToRgb"},{"id":813,"name":"isArray","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":7,"character":16}],"target":267,"permalink":"/api/utils#isArray"},{"id":817,"name":"isBoolean","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":47,"character":16}],"target":279,"permalink":"/api/utils#isBoolean"},{"id":818,"name":"isFunction","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":57,"character":16}],"target":282,"permalink":"/api/utils#isFunction"},{"id":793,"name":"isHexColor","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":56,"character":16}],"target":311,"permalink":"/api/utils#isHexColor"},{"id":816,"name":"isNumber","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":37,"character":16}],"target":276,"permalink":"/api/utils#isNumber"},{"id":815,"name":"isObject","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":27,"character":16}],"target":273,"permalink":"/api/utils#isObject"},{"id":819,"name":"isObjectEmpty","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":67,"character":16}],"target":285,"permalink":"/api/utils#isObjectEmpty"},{"id":814,"name":"isString","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":17,"character":16}],"target":270,"permalink":"/api/utils#isString"},{"id":823,"name":"isTruthy","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":112,"character":16}],"target":300,"permalink":"/api/utils#isTruthy"},{"id":812,"name":"match","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/match.ts","line":15,"character":16}],"target":320,"permalink":"/api/utils#match"},{"id":821,"name":"notNull","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":90,"character":16}],"target":292,"permalink":"/api/utils#notNull"},{"id":820,"name":"notNullish","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":78,"character":16}],"target":288,"permalink":"/api/utils#notNullish"},{"id":822,"name":"notUndefined","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":100,"character":16}],"target":296,"permalink":"/api/utils#notUndefined"},{"id":799,"name":"omit","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":57,"character":16}],"target":358,"permalink":"/api/utils#omit"},{"id":798,"name":"pick","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":35,"character":16}],"target":352,"permalink":"/api/utils#pick"},{"id":789,"name":"pluralize","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/pluralize.ts","line":9,"character":16}],"target":379,"permalink":"/api/utils#pluralize"},{"id":806,"name":"randomNum","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":30,"character":16}],"target":338,"permalink":"/api/utils#randomNum"},{"id":810,"name":"randomToken","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":38,"character":16}],"target":394,"permalink":"/api/utils#randomToken"},{"id":811,"name":"repeatEveryChars","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":50,"character":16}],"target":396,"permalink":"/api/utils#repeatEveryChars"},{"id":792,"name":"rgbToHex","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":36,"character":16}],"target":308,"permalink":"/api/utils#rgbToHex"},{"id":795,"name":"throttle","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/throttle.ts","line":8,"character":16}],"target":401,"permalink":"/api/utils#throttle"},{"id":804,"name":"toNumber","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":7,"character":16}],"target":332,"permalink":"/api/utils#toNumber"},{"id":790,"name":"wait","kind":8388608,"kindString":"Reference","flags":{},"sources":[{"fileName":"packages/utils/src/wait.ts","line":7,"character":22}],"target":413,"permalink":"/api/utils#wait"},{"id":255,"name":"debounce","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/debounce.ts","line":11,"character":16}],"signatures":[{"id":256,"name":"debounce","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new function that will only be executed after being idle for\\na certain amount of time. Useful for reducing the number of expensive\\nfunction calls."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- A new function that will only be executed after being idle for\\na certain amount of time."}]}]},"typeParameter":[{"id":260,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reflection","declaration":{"id":257,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/debounce.ts","line":11,"character":35}],"signatures":[{"id":258,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":259,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"parameters":[{"id":261,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The function to execute."}]},"type":{"type":"reference","id":260,"name":"T"}},{"id":262,"name":"ms","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The amount of time to wait before executing the function."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reflection","declaration":{"id":263,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/debounce.ts","line":14,"character":3}],"signatures":[{"id":264,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":265,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":260,"name":"T"}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"permalink":"/api/utils/function/debounce","previousId":342,"nextId":348},{"id":267,"name":"isArray","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":7,"character":16}],"signatures":[{"id":268,"name":"isArray","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Type guard function that checks whether the given object is an array."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the object is an array of any type, otherwise false."}]}]},"parameters":[{"id":269,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to check."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"permalink":"/api/utils/function/isArray","previousId":305,"nextId":279},{"id":279,"name":"isBoolean","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":47,"character":16}],"signatures":[{"id":280,"name":"isBoolean","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the passed argument is a boolean or not."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the passed argument is a boolean, otherwise false."}]}]},"parameters":[{"id":281,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to be checked for boolean."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"intrinsic","name":"boolean"}}}],"permalink":"/api/utils/function/isBoolean","previousId":267,"nextId":282},{"id":282,"name":"isFunction","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":57,"character":16}],"signatures":[{"id":283,"name":"isFunction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the input object is a function."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the input object is a function, otherwise false."}]}]},"parameters":[{"id":284,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to be checked."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"reference","name":"Function","qualifiedName":"Function","package":"typescript"}}}],"permalink":"/api/utils/function/isFunction","previousId":279,"nextId":311},{"id":276,"name":"isNumber","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":37,"character":16}],"signatures":[{"id":277,"name":"isNumber","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given object is a number and not NaN."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- Returns true if obj is a number and not NaN, false otherwise."}]}]},"parameters":[{"id":278,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to be checked."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"intrinsic","name":"number"}}}],"permalink":"/api/utils/function/isNumber","previousId":311,"nextId":273},{"id":273,"name":"isObject","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":27,"character":16}],"signatures":[{"id":274,"name":"isObject","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given value is an object."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the value is an object, false otherwise."}]}]},"parameters":[{"id":275,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to be checked."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}}],"permalink":"/api/utils/function/isObject","previousId":276,"nextId":285},{"id":285,"name":"isObjectEmpty","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":67,"character":16}],"signatures":[{"id":286,"name":"isObjectEmpty","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if an object is empty."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the object is empty."}]}]},"parameters":[{"id":287,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to check."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","qualifiedName":"Record","package":"typescript"}}}],"permalink":"/api/utils/function/isObjectEmpty","previousId":273,"nextId":270},{"id":270,"name":"isString","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":17,"character":16}],"signatures":[{"id":271,"name":"isString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given object is a string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"returns true if the given object is a string, false otherwise."}]}]},"parameters":[{"id":272,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the object to check if it is a string."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"obj","asserts":false,"targetType":{"type":"intrinsic","name":"string"}}}],"permalink":"/api/utils/function/isString","previousId":285,"nextId":300},{"id":300,"name":"isTruthy","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":112,"character":16}],"signatures":[{"id":301,"name":"isTruthy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks whether the given value is truthy, meaning it is not null, undefined,\\nfalse, 0, NaN, or an empty string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- Returns true if the value is truthy,\\nfalse otherwise."}]}]},"typeParameter":[{"id":302,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":303,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to be checked."}]},"type":{"type":"reference","id":302,"name":"T"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"reference","id":302,"name":"T"}],"name":"NonNullable","qualifiedName":"NonNullable","package":"typescript"}}}],"permalink":"/api/utils/function/isTruthy","previousId":270,"nextId":320},{"id":292,"name":"notNull","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":90,"character":16}],"signatures":[{"id":293,"name":"notNull","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Defines a type guard function that determines whether a value is not null."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Whether the value is not null."}]}]},"typeParameter":[{"id":294,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":295,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":294,"name":"T"}]}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"reference","id":294,"name":"T"},{"type":"literal","value":null}],"name":"Exclude","qualifiedName":"Exclude","package":"typescript"}}}],"permalink":"/api/utils/function/notNull","previousId":320,"nextId":288},{"id":288,"name":"notNullish","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":78,"character":16}],"signatures":[{"id":289,"name":"notNullish","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Type guard that checks if a given value is not null or undefined."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A boolean indicating whether the value is not nullish."}]}]},"typeParameter":[{"id":290,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":291,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"reference","id":290,"name":"T"}]}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"reference","id":290,"name":"T"}],"name":"NonNullable","qualifiedName":"NonNullable","package":"typescript"}}}],"permalink":"/api/utils/function/notNullish","previousId":292,"nextId":296},{"id":296,"name":"notUndefined","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/guards.ts","line":100,"character":16}],"signatures":[{"id":297,"name":"notUndefined","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given value is not undefined."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns true if the value is not undefined."}]}]},"typeParameter":[{"id":298,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":299,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check."}]},"type":{"type":"reference","id":298,"name":"T"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"reference","id":298,"name":"T"},{"type":"intrinsic","name":"undefined"}],"name":"Exclude","qualifiedName":"Exclude","package":"typescript"}}}],"permalink":"/api/utils/function/notUndefined","previousId":288,"nextId":358},{"id":314,"name":"Rgb","kind":256,"kindString":"Interface","flags":{},"children":[{"id":317,"name":"b","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":7,"character":2}],"type":{"type":"intrinsic","name":"number"}},{"id":316,"name":"g","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":6,"character":2}],"type":{"type":"intrinsic","name":"number"}},{"id":315,"name":"r","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":5,"character":2}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[317,316,315]}],"sources":[{"fileName":"packages/utils/src/hex.ts","line":4,"character":17}],"permalink":"/api/utils/interface/Rgb","previousId":413,"nextId":368},{"id":305,"name":"hexToRgb","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":18,"character":16}],"signatures":[{"id":306,"name":"hexToRgb","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Converts a hexadecimal color code to its RGB equivalent."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An object containing the red, green, and blue values of\\nthe color, or null if the input is not a valid hexadecimal color code."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nhexToRgb(\'#fff\') // { r: 255, g: 255, b: 255 }\\n```"}]}]},"parameters":[{"id":307,"name":"hex","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The hexadecimal color code to convert."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","id":314,"name":"Rgb"},{"type":"literal","value":null}]}}],"permalink":"/api/utils/function/hexToRgb","previousId":387,"nextId":267},{"id":311,"name":"isHexColor","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":56,"character":16}],"signatures":[{"id":312,"name":"isHexColor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the given string represents a valid hexadecimal color code."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- An array of matched values if the input is a valid\\nhexadecimal color code, or null otherwise."}]}]},"parameters":[{"id":313,"name":"hex","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The hexadecimal color code to be validated."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","name":"RegExpExecArray","qualifiedName":"RegExpExecArray","package":"typescript"},{"type":"literal","value":null}]}}],"permalink":"/api/utils/function/isHexColor","previousId":282,"nextId":276},{"id":308,"name":"rgbToHex","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/hex.ts","line":36,"character":16}],"signatures":[{"id":309,"name":"rgbToHex","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Converts an RGB color object to a hexadecimal color string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A string that represents a hexadecimal color code."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nrgbToHex({ r: 255, g: 255, b: 255 }) // \'#ffffff\'\\n```"}]}]},"parameters":[{"id":310,"name":"color","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An object that represents an RGB color."}]},"type":{"type":"reference","id":314,"name":"Rgb"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/rgbToHex","previousId":396,"nextId":401},{"id":320,"name":"match","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/match.ts","line":15,"character":16}],"signatures":[{"id":321,"name":"match","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a predicate function that matches against a set of input predicates."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- a predicate function that returns the output of the matching predicate function\\nor "},{"kind":"code","text":"`null`"},{"kind":"text","text":" if no predicates match."}]}]},"typeParameter":[{"id":322,"name":"InputValue","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","name":"Input"}},{"id":323,"name":"OutValue","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":324,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"a function that accepts a "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function and returns an object whose keys\\nare the names of the predicates, and whose values are the corresponding predicate functions."}]},"type":{"type":"reflection","declaration":{"id":325,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/match.ts","line":16,"character":12}],"signatures":[{"id":326,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":327,"name":"test","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":328,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/match.ts","line":17,"character":10}],"signatures":[{"id":329,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":330,"name":"predicate","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":322,"name":"InputValue"},{"type":"intrinsic","name":"boolean"}],"name":"Predicate"}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"reference","id":323,"name":"OutValue"},{"type":"reference","typeArguments":[{"type":"reference","id":322,"name":"InputValue"},{"type":"reference","id":323,"name":"OutValue"}],"name":"Predicate"}]}],"name":"Record","qualifiedName":"Record","package":"typescript"}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":322,"name":"InputValue"},{"type":"reference","typeArguments":[{"type":"reference","id":323,"name":"OutValue"}],"name":"Out"}],"name":"Predicate"}}],"permalink":"/api/utils/function/match","previousId":300,"nextId":292},{"id":335,"name":"addZero","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":18,"character":16}],"signatures":[{"id":336,"name":"addZero","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a string representation of the given number with a leading zero if the number is less than 10."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A string representation of the given number with a leading zero if the number is less than 10."}]}]},"parameters":[{"id":337,"name":"num","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The number to add a leading zero to."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/addZero","nextId":391},{"id":342,"name":"clamp","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":45,"character":16}],"signatures":[{"id":343,"name":"clamp","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a value that is clamped between a minimum and a maximum value."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The clamped value."}]}]},"parameters":[{"id":344,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to clamp."}]},"type":{"type":"intrinsic","name":"number"}},{"id":345,"name":"min","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The minimum value."}]},"type":{"type":"intrinsic","name":"number"}},{"id":346,"name":"max","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The maximum value."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/api/utils/function/clamp","previousId":391,"nextId":255},{"id":338,"name":"randomNum","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":30,"character":16}],"signatures":[{"id":339,"name":"randomNum","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a random number within a specified range."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A random number within the specified range."}]}]},"parameters":[{"id":340,"name":"min","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"},{"id":341,"name":"max","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/api/utils/function/randomNum","previousId":379,"nextId":394},{"id":332,"name":"toNumber","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/number.ts","line":7,"character":16}],"signatures":[{"id":333,"name":"toNumber","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the given value to a number. If the value cannot be converted, 0 is returned."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- The converted number or 0 if conversion fails."}]}]},"parameters":[{"id":334,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to convert."}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"permalink":"/api/utils/function/toNumber","previousId":401,"nextId":413},{"id":368,"name":"Entries","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":3,"character":12}],"typeParameters":[{"id":369,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"reference","id":364,"typeArguments":[{"type":"reference","id":369,"name":"T"}],"name":"Keys"},{"type":"reference","id":366,"typeArguments":[{"type":"reference","id":369,"name":"T"}],"name":"Values"}]}},"permalink":"/api/utils#Entries","previousId":314,"nextId":364},{"id":364,"name":"Keys","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":1,"character":12}],"typeParameters":[{"id":365,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","typeArguments":[{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":365,"name":"T"}},{"type":"intrinsic","name":"string"}],"name":"Extract","qualifiedName":"Extract","package":"typescript"},"permalink":"/api/utils#Keys","previousId":368,"nextId":370},{"id":370,"name":"Plain","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":4,"character":12}],"typeParameters":[{"id":377,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","id":377,"name":"T"},"extendsType":{"type":"reflection","declaration":{"id":371,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":4,"character":33}],"signatures":[{"id":372,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":373,"name":"a","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"trueType":{"type":"reference","id":377,"name":"T"},"falseType":{"type":"conditional","checkType":{"type":"reference","id":377,"name":"T"},"extendsType":{"type":"reflection","declaration":{"id":374,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":6,"character":14}],"signatures":[{"id":375,"name":"__type","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":376,"name":"a","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}]}},"trueType":{"type":"reference","id":377,"name":"T"},"falseType":{"type":"conditional","checkType":{"type":"reference","id":377,"name":"T"},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"Key","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":377,"name":"T"}},"templateType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Key"},"objectType":{"type":"reference","id":377,"name":"T"}}},"falseType":{"type":"reference","id":377,"name":"T"}}}},"permalink":"/api/utils#Plain","previousId":364,"nextId":366},{"id":366,"name":"Values","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":2,"character":12}],"typeParameters":[{"id":367,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"indexedAccess","indexType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":367,"name":"T"}},"objectType":{"type":"reference","id":367,"name":"T"}},"permalink":"/api/utils#Values","previousId":370},{"id":348,"name":"entries","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":20,"character":16}],"signatures":[{"id":349,"name":"entries","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of a given object\'s own enumerable string-keyed property [key, value] pairs."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns the new array of key-value pairs."}]}]},"typeParameter":[{"id":350,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":351,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The object to get the entries of."}]},"type":{"type":"reference","id":350,"name":"T"}}],"type":{"type":"reference","id":368,"typeArguments":[{"type":"reference","id":350,"name":"T"}],"name":"Entries"}}],"permalink":"/api/utils/function/entries","previousId":255,"nextId":387},{"id":358,"name":"omit","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":57,"character":16}],"signatures":[{"id":359,"name":"omit","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new object with all properties of target except the ones in keys."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- A new object with all properties of target except the ones in keys."}]}]},"typeParameter":[{"id":360,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the target object."}]}},{"id":361,"name":"K","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The type of the keys to omit."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":362,"name":"target","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The target object to omit the keys from."}]},"type":{"type":"reference","id":360,"name":"T"}},{"id":363,"name":"keys","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The keys to omit from target."}]},"type":{"type":"array","elementType":{"type":"reference","id":361,"name":"K"}}}],"type":{"type":"reference","id":370,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":360,"name":"T"},{"type":"reference","id":361,"name":"K"}],"name":"Omit","qualifiedName":"Omit","package":"typescript"}],"name":"Plain"}}],"permalink":"/api/utils/function/omit","previousId":296,"nextId":352},{"id":352,"name":"pick","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/object.ts","line":35,"character":16}],"signatures":[{"id":353,"name":"pick","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new object with properties from the original object that are\\nspecified in the keys array."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"a new object with properties picked from the\\noriginal object"}]}]},"typeParameter":[{"id":354,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the type of the original object"}]}},{"id":355,"name":"K","kind":131072,"kindString":"Type parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the type of the keys of the original object to be picked"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":356,"name":"target","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the original object to pick properties from"}]},"type":{"type":"reference","id":354,"name":"T"}},{"id":357,"name":"keys","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"an array of keys to pick from the original object"}]},"type":{"type":"array","elementType":{"type":"reference","id":355,"name":"K"}}}],"type":{"type":"reference","id":370,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":354,"name":"T"},{"type":"reference","id":355,"name":"K"}],"name":"Pick","qualifiedName":"Pick","package":"typescript"}],"name":"Plain"}}],"permalink":"/api/utils/function/pick","previousId":358,"nextId":379},{"id":379,"name":"pluralize","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/pluralize.ts","line":9,"character":16}],"signatures":[{"id":380,"name":"pluralize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a function that takes a "},{"kind":"code","text":"`TemplateStringsArray`"},{"kind":"text","text":" and an array of tokens and\\nreturns a string by concatenating the interpolated values of the strings and tokens."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The function that takes a "},{"kind":"code","text":"`TemplateStringsArray`"},{"kind":"text","text":" and an array of tokens and returns the final string."}]},{"tag":"@example","content":[{"kind":"text","text":"pluralize(2)"},{"kind":"code","text":"`packag${[\'e\', \'es\']} agenc${[\'y\', \'ies\']}`"},{"kind":"text","text":" // packages agencies"}]}]},"parameters":[{"id":381,"name":"total","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The total number of items."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reflection","declaration":{"id":382,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/pluralize.ts","line":11,"character":3}],"signatures":[{"id":383,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":384,"name":"strings","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TemplateStringsArray","qualifiedName":"TemplateStringsArray","package":"typescript"}},{"id":385,"name":"tokens","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/api/utils/function/pluralize","previousId":352,"nextId":338},{"id":391,"name":"capitalize","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":27,"character":16}],"signatures":[{"id":392,"name":"capitalize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Capitalizes the first letter of a given string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The capitalized string."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\ncapitalize(\'hello\') // \'Hello\'\\n```"}]}]},"parameters":[{"id":393,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The string to capitalize."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/capitalize","previousId":335,"nextId":342},{"id":387,"name":"generateChars","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":9,"character":16}],"signatures":[{"id":388,"name":"generateChars","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates an array of characters between the startChar and endChar, inclusive."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"an array of characters from startChar to endChar"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\ngenerateChars(\'a\', \'d\') // [\'a\', \'b\', \'c\', \'d\']\\n```"}]}]},"parameters":[{"id":389,"name":"startChar","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the first character of the array"}]},"type":{"type":"intrinsic","name":"string"}},{"id":390,"name":"endChar","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the last character of the array"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"permalink":"/api/utils/function/generateChars","previousId":348,"nextId":305},{"id":394,"name":"randomToken","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":38,"character":16}],"signatures":[{"id":395,"name":"randomToken","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a randomly generated token string."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The token string generated by concatenating a random number\\nand a base36 string after slicing off the first 2 characters."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nrandomToken() // \'6c9qicypz1\'\\n```"}]}]},"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/randomToken","previousId":338,"nextId":396},{"id":396,"name":"repeatEveryChars","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/string.ts","line":50,"character":16}],"signatures":[{"id":397,"name":"repeatEveryChars","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Repeats every other character in the given string a specified number of times."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The modified string with every other character repeated."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nrepeatEveryChars(\'abc\', 2) // \'aabbcc\'\\n```"}]}]},"parameters":[{"id":398,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The input string to repeat characters from."}]},"type":{"type":"intrinsic","name":"string"}},{"id":399,"name":"repeats","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The number of times to repeat each character."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/utils/function/repeatEveryChars","previousId":394,"nextId":308},{"id":401,"name":"throttle","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/throttle.ts","line":8,"character":16}],"signatures":[{"id":402,"name":"throttle","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a new function that, when invoked repeatedly, invokes fn at most once per every ms milliseconds."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- A new function that wraps fn with throttling behavior."}]}]},"typeParameter":[{"id":406,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reflection","declaration":{"id":403,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/throttle.ts","line":8,"character":35}],"signatures":[{"id":404,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":405,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":406,"name":"T"}],"name":"ReturnType","qualifiedName":"ReturnType","package":"typescript"}}]}}}],"parameters":[{"id":407,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The function to be throttled."}]},"type":{"type":"reference","id":406,"name":"T"}},{"id":408,"name":"ms","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The number of milliseconds to throttle invocations to."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reflection","declaration":{"id":409,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/throttle.ts","line":11,"character":3}],"signatures":[{"id":410,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":411,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":406,"name":"T"}],"name":"Parameters","qualifiedName":"Parameters","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":406,"name":"T"}],"name":"ReturnType","qualifiedName":"ReturnType","package":"typescript"}}]}}}],"permalink":"/api/utils/function/throttle","previousId":308,"nextId":332},{"id":413,"name":"wait","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/utils/src/wait.ts","line":7,"character":22}],"signatures":[{"id":414,"name":"wait","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Asynchronously waits for a specified number of milliseconds."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A Promise that resolves after the specified time has elapsed."}]}]},"parameters":[{"id":415,"name":"ms","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The time to wait in milliseconds. Default is 1000."}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"1000"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}],"permalink":"/api/utils/function/wait","previousId":332,"nextId":314}],"groups":[{"title":"Functions","children":[335,391,342,255,348,387,305,267,279,282,311,276,273,285,270,300,320,292,288,296,358,352,379,338,394,396,308,401,332,413]},{"title":"Interfaces","children":[314]},{"title":"Type Aliases","children":[368,364,370,366]}],"sources":[{"fileName":"packages/utils/src/index.ts","line":1,"character":0}],"permalink":"/api/utils"},"urlSlug":"utils"}],"packageName":"@zero-dependency/utils","packageVersion":"1.5.0"}]')}}]);